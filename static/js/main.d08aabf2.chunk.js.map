{"version":3,"sources":["api/index.js","components/loader/Loader.js","components/spinner/index.js","components/spinner/Spinner.js","components/loader/index.js","components/loader/styles.js","components/categories/components/categoryCard/CategoryCard.js","components/categories/components/categoryCard/index.js","components/categories/Categories.js","components/categories/actions/setIsLoading.js","components/categories/actions/setCategories.js","components/categories/actions/setError.js","components/categories/actions/fetchCategories.js","components/wallet/actions/setIsLoading.js","components/wallet/actions/setTotalSum.js","components/wallet/actions/setError.js","components/wallet/actions/setIncomesPerMonth.js","components/wallet/actions/setLossesPerMonth.js","components/wallet/actions/init.js","components/categories/actions/deleteCategory.js","components/editCategoryModal/actions/setError.js","components/editCategoryModal/actions/setEntity.js","components/editCategoryModal/defaultState.js","components/editCategoryModal/actions/makeEmptyEntity.js","components/editCategoryModal/actions/setIsShowing.js","components/editCategoryModal/actions/setCosts.js","components/editCategoryModal/actions/setIsLoadingCosts.js","components/editCategoryModal/actions/fetchCosts.js","components/editCategoryModal/actions/setIsLoadingEntity.js","components/editCategoryModal/actions/fetchEntity.js","components/editCategoryModal/actions/init.js","components/categories/dispatcher.js","components/categories/index.js","components/categories/connector.js","components/portal/index.js","components/portal/Portal.js","components/modal/Modal.js","components/modal/index.js","components/addCostsModal/AddCostsModal.js","components/addCostsModal/actions/setIsShowing.js","components/addCostsModal/actions/setIsLoading.js","components/addCostsModal/actions/setCategories.js","components/addCostsModal/actions/setError.js","components/addCostsModal/actions/setEntity.js","components/addCostsModal/defaultState.js","components/addCostsModal/actions/makeEmptyEntity.js","components/addCostsModal/actions/init.js","components/addCostsModal/actions/addCosts.js","components/addCostsModal/dispatcher.js","components/addCostsModal/index.js","components/addCostsModal/connector.js","components/addCategoryModal/AddCategoryModal.js","components/addCategoryModal/actions/setIsShowing.js","components/addCategoryModal/actions/setIsLoading.js","components/addCategoryModal/actions/setError.js","components/addCategoryModal/actions/addCategory.js","components/addCategoryModal/actions/setEntity.js","components/addCategoryModal/defaultState.js","components/addCategoryModal/actions/makeEmptyEntity.js","components/addCategoryModal/dispatcher.js","components/addCategoryModal/index.js","components/addCategoryModal/connector.js","components/header/Header.js","components/addIncomesModal/actions/setIsShowing.js","components/header/actions/logout.js","components/header/dispatcher.js","components/header/index.js","components/header/connector.js","helpers/number-formmater.js","components/wallet/Wallet.js","components/editWalletModal/actions/setIsShowing.js","components/wallet/dispatcher.js","components/wallet/index.js","components/wallet/connector.js","components/addIncomesModal/AddIncomesModal.js","components/addIncomesModal/actions/setError.js","components/addIncomesModal/actions/setEntity.js","components/addIncomesModal/defaultState.js","components/addIncomesModal/actions/makeEmptyEntity.js","components/addIncomesModal/actions/setIsLoading.js","components/addIncomesModal/actions/init.js","components/addIncomesModal/actions/addIncomes.js","components/addIncomesModal/dispatcher.js","components/addIncomesModal/index.js","components/addIncomesModal/connector.js","components/editCategoryModal/EditCategoryModal.js","components/editCategoryModal/actions/deleteCosts.js","components/editCategoryModal/actions/editCategory.js","components/editCategoryModal/dispatcher.js","components/editCategoryModal/index.js","components/editCategoryModal/connector.js","components/editWalletModal/EditWalletModal.js","components/editWalletModal/actions/setError.js","components/editWalletModal/actions/setIncomes.js","components/editWalletModal/actions/setIsLoadingIncomes.js","components/editWalletModal/actions/fetchIncomes.js","components/editWalletModal/actions/init.js","components/editWalletModal/actions/deleteIncomes.js","components/editWalletModal/dispatcher.js","components/editWalletModal/index.js","components/editWalletModal/connector.js","components/register/Register.js","components/register/index.js","components/login/Login.js","components/login/actions/setError.js","components/login/actions/setIsLoading.js","components/login/actions/login.js","components/login/actions/setForm.js","components/login/dispatcher.js","components/login/index.js","components/login/connector.js","components/privateRoute/PrivateRoute.js","components/privateRoute/index.js","components/privateRoute/connector.js","components/layout/Layout.js","components/layout/index.js","components/layout/connector.js","serviceWorker.js","components/categories/defaultState.js","components/categories/reducer.js","components/addCostsModal/reducer.js","components/addCategoryModal/reducer.js","components/wallet/defaultState.js","components/wallet/reducer.js","components/addIncomesModal/reducer.js","components/editCategoryModal/reducer.js","components/editWalletModal/defaultState.js","components/editWalletModal/reducer.js","components/login/defaultState.js","components/login/reducer.js","store.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Loader","Spinner","classes","children","isLoading","className","loader","compose","withStyles","CategoryCard","title","sumLimit","costsSumPerMonth","onDelete","onEdit","iconStyle","useMemo","display","alignItems","justifyContent","cursor","padding","fontSize","Body","Title","toUpperCase","Text","text","Footer","col","success","mr","mt","onClick","EditOutlined","style","danger","CloseCircleFilled","Categories","categories","fetchCategories","deleteCategory","onEditCategory","useEffect","items","map","item","index","push","key","id","sum_limit","length","Deck","mb","SET_IS_LOADING","Symbol","MutateIsLoading","state","loadingStatus","update","$set","SetIsLoading","type","payload","SET_CATEGORIES","MutateCategories","SetCategories","SET_ERROR","MutateError","message","error","SetError","FetchCategories","dispatch","getState","a","uid","auth","costsRef","collection","where","doc","get","then","docs","snap","forEach","data","sum","console","SET_TOTAL_SUM","MutateTotalSum","totalSum","SetTotalSum","SET_INCOMES_PER_MONTH","MutateIncomesPerMonth","incomesPerMonth","SetIncomesPerMonth","SET_LOSSES_PER_MONTH","MutateLossesPerMonth","lossesPerMonth","SetLossesPerMonth","InitWallet","date","Date","Timestamp","fromDate","getFullYear","getMonth","costs","incomes","totalLossesPerMonth","reduce","totalIncomesPerMonth","DeleteCategory","batch","delete","ref","commit","SET_ENTITY","MutateEntity","entity","$merge","SetEntity","isShowing","isLoadingEntity","isLoadingCosts","MakeEmptyEntity","defaultState","SET_IS_SHOWING","MutateIsShowing","SetIsShowing","SET_COSTS","MutateCosts","SetCosts","SET_IS_LOADING_COSTS","MutateIsLoadingCosts","SetIsLoadingCosts","FetchCosts","categoryId","costsByCategory","mappedCostsByCategory","SET_IS_LOADING_ENTITY","MutateIsLoadingEntity","SetIsLoadingEntity","FetchEntity","exists","capitalize","Init","Dispatcher","InitEditCategoryModal","connect","dispatcher","Portal","el","document","createElement","body","appendChild","this","removeChild","props","ReactDOM","createPortal","Component","Modal","onCancel","defaultProps","isOpen","AddCostsModal","init","setIsShowing","addCosts","onChangeEntity","Group","Input","value","placeholder","onChange","target","htmlFor","Select","disabled","AddCosts","addCostsModal","editCategoryModal","isShowingEditCategoryModal","set","userId","AddCategoryModal","addCategory","AddCategory","addCategoryModal","toLowerCase","docId","Header","logout","setIsShowingAddCostsModal","setIsShowingAddCategoryModal","setIsShowingAddIncomesModal","window","addEventListener","e","alert","testmem","expand","dark","bg","sticky","Brand","href","Toggler","navbar","my","info","postMessage","warning","Logout","getFirebase","signOut","SetIsShowingAddCostsModal","SetIsShowingAddCategoryModal","SetIsShowingAddIncomesModal","formatter","Intl","NumberFormat","minimumFractionDigits","Wallet","onEditWallet","backgroundColor","marginLeft","format","SetIsShowingEditWalletModal","wallet","AddIncomesModal","addIncomes","AddIncomes","addIncomesModal","EditCategoryModal","editCategory","deleteCosts","useState","copiedEntity","setCopiedEntity","useCallback","obj","prevState","overflowY","height","Item","toDate","toLocaleDateString","color","DeleteCosts","costsId","EditCategory","entityObj","log","EditWalletModal","isLoadingIncomes","deleteIncomes","SET_INCOMES","MutateIncomes","SetIncomes","SET_IS_LOADING_INCOMES","MutateIsLoadingIncomes","SetIsLoadingIncomes","FetchIncomes","mappedIncomes","DeleteIncomes","incomesId","editWalletModal","Register","primary","Login","email","password","login","onChangeForm","handleOnSubmit","event","preventDefault","to","onSubmit","getFirestore","setIsLoading","form","setError","SET_FORM","MutateForm","SetForm","PrivateRoute","rest","redirectTo","render","location","isLoaded","isEmpty","pathname","from","Layout","exact","path","Boolean","hostname","match","isLoadingCategories","reducer","initialState","loss","income","rootReducer","combineReducers","categoriesReducer","addCostsModalReducer","addCategoryModalReducer","addIncomesModalReducer","walletReducer","editCategoryModalReducer","editWalletModalReducer","loginReducer","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","String","prototype","charAt","slice","firebaseConfig","attachAuthIsReady","userProfile","useFirestoreForProfile","onAuthStateChanged","user","StrictMode","config","createFirestoreInstance","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d08aabf2.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/analytics';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyD6NVbBtWaZm5P3j4ZHh1Bqs4TatJlYmS4',\r\n  authDomain: 'finance-app-6cdfc.firebaseapp.com',\r\n  databaseURL: 'https://finance-app-6cdfc.firebaseio.com',\r\n  projectId: 'finance-app-6cdfc',\r\n  storageBucket: 'finance-app-6cdfc.appspot.com',\r\n  messagingSenderId: '618921567953',\r\n  appId: '1:618921567953:web:5e0513acafd208704647f0',\r\n  measurementId: 'G-H2X987S04D',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;\r\n\r\n","import React, {Fragment} from 'react';\r\n\r\nconst Loader = ({\r\n  Spinner,\r\n}) => ({\r\n  classes,\r\n\r\n  children,\r\n\r\n  isLoading,\r\n}) => {\r\n\r\n  if (isLoading) {\r\n    return (\r\n        <div className={classes.loader}>\r\n          <Spinner/>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <Fragment>\r\n        {children}\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Loader;","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={'loader'}>\r\n      <div className={'lds-dual-ring'}/>\r\n    </div>\r\n);\r\n\r\nexport default Spinner;","import withStyles from 'react-jss';\r\nimport {compose} from 'redux';\r\nimport styles from './styles';\r\n\r\nimport Loader from './Loader';\r\nimport Spinner from '../spinner';\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n)(\r\n    Loader({\r\n      Spinner,\r\n    }),\r\n);\r\n\r\n","export default ({\r\n  loader: `\r\n    min-height: 200px;\r\n    position: relative;\r\n  `,\r\n});","import React, {useMemo} from 'react';\r\nimport {Card, Button, Row, Col} from 'bootstrap-4-react';\r\nimport {CloseCircleFilled, EditOutlined} from '@ant-design/icons';\r\n\r\nconst CategoryCard = (\r\n    {\r\n      title,\r\n      sumLimit,\r\n      costsSumPerMonth,\r\n\r\n      onDelete,\r\n      onEdit,\r\n    },\r\n) => {\r\n\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {\r\n              title?.toUpperCase()\r\n            }\r\n          </Card.Title>\r\n          <Card.Text text={'muted'}>\r\n            Траты за месяц: {costsSumPerMonth} ₽\r\n          </Card.Text>\r\n\r\n          {\r\n            sumLimit > 0 && (\r\n                <Card.Text text={'muted'}>\r\n                  Лимит на месяц: {sumLimit} ₽\r\n                </Card.Text>\r\n            )\r\n          }\r\n\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Row className={'d-flex justify-content-between'}>\r\n            <Col col={'xs'}>\r\n              <Button\r\n                  success\r\n                  mr={1}\r\n                  mt={1}\r\n                  onClick={onEdit}\r\n              >\r\n                <EditOutlined\r\n                    style={iconStyle}\r\n                />\r\n                Редактировать\r\n              </Button>\r\n\r\n            </Col>\r\n            <Col col={'xs'}>\r\n              <Button\r\n                  danger\r\n                  onClick={onDelete}\r\n                  mt={1}\r\n              >\r\n                <CloseCircleFilled\r\n                    style={{\r\n                      ...iconStyle,\r\n                    }}\r\n                />\r\n                Удалить\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Card.Footer>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;","import {compose} from 'redux';\r\nimport CategoryCard from './CategoryCard';\r\n\r\nexport default compose()(\r\n    CategoryCard,\r\n);","import React, {useEffect} from 'react';\r\nimport Loader from '../loader';\r\nimport CategoryCard from './components/categoryCard';\r\nimport {Card} from 'bootstrap-4-react';\r\n\r\nconst Categories = (\r\n    {\r\n      categories,\r\n      isLoading,\r\n\r\n      fetchCategories,\r\n      deleteCategory,\r\n      onEditCategory,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  return (\r\n      <Loader isLoading={isLoading}>\r\n        {\r\n          (() => {\r\n            let items = [];\r\n            return categories.map((item, index) => {\r\n              if (index % 2 === 0) {\r\n                items = [];\r\n              }\r\n              items.push((\r\n                  <CategoryCard\r\n                      key={item.id}\r\n                      title={item.title}\r\n                      sumLimit={item.sum_limit}\r\n                      costsSumPerMonth={item.costsSumPerMonth}\r\n                      onEdit={() => onEditCategory(item.id)}\r\n                      onDelete={() => deleteCategory(item.id)}\r\n                  />\r\n              ));\r\n\r\n              if (\r\n                  index > 0 && index % 2 !== 0\r\n                  || categories.length === index + 1\r\n              ) {\r\n                return (\r\n                    <Card.Deck\r\n                        mb={'3'}\r\n                        mt={'3'}\r\n                        key={index}\r\n                    >\r\n                      {[...items]}\r\n                    </Card.Deck>\r\n                );\r\n              }\r\n            });\r\n          })()\r\n        }\r\n      </Loader>\r\n  );\r\n};\r\n\r\nexport default Categories;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (loadingStatus) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: {\r\n    loadingStatus,\r\n  },\r\n});\r\n\r\nexport const MutateIsLoading = (state, {loadingStatus}) => update(state, {\r\n  isLoading: {$set: loadingStatus},\r\n});\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_CATEGORIES = Symbol('SET_CATEGORIES');\r\n\r\nexport const SetCategories = (categories) => ({\r\n  type: SET_CATEGORIES,\r\n  payload: categories,\r\n});\r\n\r\nexport const MutateCategories = (state, categories) => update(state, {\r\n  categories: {$set: categories},\r\n});\r\n\r\nexport default SetCategories;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetCategories from './setCategories';\r\nimport SetError from './setError';\r\n\r\nconst FetchCategories = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(SetIsLoading(true));\r\n\r\n    const costsRef = firestore.collection('costs');\r\n    const categories = [];\r\n\r\n    await firestore.collection('categories').where(\r\n        'userId',\r\n        '==',\r\n        firestore.doc(`users/${uid}`),\r\n    ).get().then(\r\n        async ({docs}) => {\r\n          for (const doc of docs) {\r\n            let costsSumPerMonth = 0;\r\n\r\n            await costsRef.where(\r\n                'categoryId',\r\n                '==',\r\n                firestore.doc(`categories/${doc.id}`),\r\n            ).where(\r\n                'userId',\r\n                '==',\r\n                firestore.doc(`users/${uid}`),\r\n            ).get().then(snap => {\r\n              snap.docs.forEach(item => costsSumPerMonth += item.data().sum);\r\n            });\r\n\r\n            categories.push({\r\n              id: doc.id,\r\n              costsSumPerMonth,\r\n              ...doc.data(),\r\n            });\r\n          }\r\n        },\r\n    );\r\n\r\n    dispatch(SetCategories(categories));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default FetchCategories;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_TOTAL_SUM = Symbol('SET_TOTAL_SUM');\r\n\r\nexport const SetTotalSum = (totalSum) => ({\r\n  type: SET_TOTAL_SUM,\r\n  payload: totalSum,\r\n});\r\n\r\nexport const MutateTotalSum = (state, totalSum) => {\r\n  return update(state, {\r\n    totalSum: {$set: totalSum},\r\n  });\r\n};\r\n\r\nexport default SetTotalSum;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_INCOMES_PER_MONTH = Symbol('SET_INCOMES_PER_MONTH');\r\n\r\nexport const SetIncomesPerMonth = (incomesPerMonth) => ({\r\n  type: SET_INCOMES_PER_MONTH,\r\n  payload: incomesPerMonth,\r\n});\r\n\r\nexport const MutateIncomesPerMonth = (state, incomesPerMonth) => {\r\n  return update(state, {\r\n    incomesPerMonth: {$set: incomesPerMonth},\r\n  });\r\n};\r\n\r\nexport default SetIncomesPerMonth;","import update from 'immutability-helper';\r\n\r\nexport const SET_LOSSES_PER_MONTH = Symbol('SET_LOSSES_PER_MONTH');\r\n\r\nexport const SetLossesPerMonth = (lossesPerMonth) => ({\r\n  type: SET_LOSSES_PER_MONTH,\r\n  payload: lossesPerMonth,\r\n});\r\n\r\nexport const MutateLossesPerMonth = (state, lossesPerMonth) => {\r\n  return update(state, {\r\n    lossesPerMonth: {$set: lossesPerMonth},\r\n  });\r\n};\r\n\r\nexport default SetLossesPerMonth;","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetTotalSum from './setTotalSum';\r\nimport SetError from './setError';\r\nimport firebase from '../../../api';\r\nimport SetIncomesPerMonth from './setIncomesPerMonth';\r\nimport SetLossesPerMonth from './setLossesPerMonth';\r\n\r\nconst InitWallet = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(SetIsLoading(true));\r\n    const date = new Date();\r\n    const {\r\n      docs: costs,\r\n    } = await firestore.collection('costs').where(\r\n        'userId',\r\n        '==',\r\n        firestore.doc(`users/${uid}`),\r\n    ).where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 1)),\r\n    ).where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 31)),\r\n    ).get();\r\n    const {\r\n      docs: incomes,\r\n    } = await firestore.collection('incomes').where(\r\n        'userId',\r\n        '==',\r\n        firestore.doc(`users/${uid}`),\r\n    ).where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 1)),\r\n    ).where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 31)),\r\n    ).get();\r\n    const totalLossesPerMonth = costs.reduce(\r\n        (sum, item) => sum + item.data().sum, 0,\r\n    );\r\n    const totalIncomesPerMonth = incomes.reduce(\r\n        (sum, item) => sum + item.data().sum, 0,\r\n    );\r\n    const totalSum = totalIncomesPerMonth - totalLossesPerMonth;\r\n\r\n    dispatch(SetLossesPerMonth(totalLossesPerMonth));\r\n    dispatch(SetIncomesPerMonth(totalIncomesPerMonth));\r\n    dispatch(SetTotalSum(totalSum));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('При загрузке данных произошла ошибка.'));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default InitWallet;","import {firestore} from 'Api';\r\nimport SetError from './setError';\r\nimport FetchCategories from './fetchCategories';\r\nimport InitWallet from '../../wallet/actions/init';\r\n\r\nconst DeleteCategory = (id) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    const batch = firestore.batch();\r\n\r\n    const costsRef = await firestore.collection('costs').where(\r\n        'userId',\r\n        '==',\r\n        firestore.doc(`users/${uid}`),\r\n    ).where(\r\n        'categoryId',\r\n        '==',\r\n        firestore.doc(`categories/${id}`),\r\n    ).get();\r\n    costsRef.forEach(doc => {\r\n      batch.delete(doc.ref);\r\n    });\r\n\r\n    await firestore.collection('categories').doc(id).delete();\r\n    await batch.commit();\r\n\r\n    dispatch(InitWallet());\r\n    dispatch(FetchCategories());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка удаления категории'));\r\n  }\r\n};\r\n\r\nexport default DeleteCategory;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  isLoadingEntity: false,\r\n  isLoadingCosts: false,\r\n  error: null,\r\n  entity: {\r\n    id: '',\r\n    title: '',\r\n    sum_limit: 0,\r\n  },\r\n  costs: [],\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import update from 'immutability-helper';\r\n\r\nexport const SET_COSTS = Symbol('SET_COSTS');\r\n\r\nexport const SetCosts = (costs) => ({\r\n  type: SET_COSTS,\r\n  payload: costs,\r\n});\r\n\r\nexport const MutateCosts = (state, costs) => {\r\n  return update(state, {\r\n    costs: {$set: costs},\r\n  });\r\n};\r\n\r\nexport default SetCosts;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING_COSTS = Symbol('SET_IS_LOADING_COSTS');\r\n\r\nexport const SetIsLoadingCosts = (isLoadingCosts) => ({\r\n  type: SET_IS_LOADING_COSTS,\r\n  payload: isLoadingCosts,\r\n});\r\n\r\nexport const MutateIsLoadingCosts = (state, isLoadingCosts) => {\r\n  return update(state, {\r\n    isLoadingCosts: {$set: isLoadingCosts},\r\n  });\r\n};\r\n\r\nexport default SetIsLoadingCosts;","import firebase, {firestore} from 'Api';\r\nimport SetError from './setError';\r\nimport SetCosts from './setCosts';\r\nimport SetIsLoadingCosts from './setIsLoadingCosts';\r\n\r\nconst FetchCosts = (categoryId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(SetIsLoadingCosts(true));\r\n    const date = new Date();\r\n\r\n    const {\r\n      docs: costsByCategory,\r\n    } = await firestore.collection('costs').where(\r\n        'userId',\r\n        '==',\r\n        firestore.doc(`users/${uid}`),\r\n    ).where(\r\n        'categoryId',\r\n        '==',\r\n        firestore.doc(`categories/${categoryId}`),\r\n    ).where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 1)),\r\n    ).where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 31)),\r\n    ).get();\r\n\r\n    const mappedCostsByCategory = costsByCategory.map(item => ({\r\n      id: item.id,\r\n      ...item.data(),\r\n    }));\r\n\r\n    dispatch(SetCosts(mappedCostsByCategory));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoadingCosts(false));\r\n  }\r\n};\r\n\r\nexport default FetchCosts;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING_ENTITY = Symbol('SET_IS_LOADING_ENTITY');\r\n\r\nexport const SetIsLoadingEntity = (isLoadingEntity) => ({\r\n  type: SET_IS_LOADING_ENTITY,\r\n  payload: isLoadingEntity\r\n});\r\n\r\nexport const MutateIsLoadingEntity = (state, isLoadingEntity) => {\r\n  return update(state, {\r\n    isLoadingEntity: {$set: isLoadingEntity},\r\n  });\r\n}\r\n\r\nexport default SetIsLoadingEntity;","import {firestore} from 'Api';\r\nimport SetIsLoadingEntity from './setIsLoadingEntity';\r\nimport SetError from './setError';\r\nimport SetEntity from './setEntity';\r\n\r\nconst FetchEntity = (categoryId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoadingEntity(true));\r\n\r\n    const doc = await firestore.collection('categories').doc(categoryId).get();\r\n    if (!doc.exists) {\r\n      dispatch(SetError('Произошла ошибка. Такой категории не найдено.'));\r\n      return;\r\n    }\r\n\r\n    dispatch(SetEntity({\r\n      id: doc.id,\r\n      title: doc.data().title.capitalize(),\r\n      ...doc.data(),\r\n    }));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoadingEntity(false));\r\n  }\r\n};\r\n\r\nexport default FetchEntity;","import MakeEmptyEntity from './makeEmptyEntity';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport FetchCosts from './fetchCosts';\r\nimport FetchEntity from './fetchEntity';\r\n\r\nconst Init = (categoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsShowing());\r\n    dispatch(MakeEmptyEntity());\r\n    await dispatch(FetchEntity(categoryId));\r\n    await dispatch(FetchCosts(categoryId));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(\r\n        SetError('Ошибка при загрузке данных для редактирования сущнности'),\r\n    );\r\n  }\r\n};\r\n\r\nexport default Init;\r\n","import FetchCategories from './actions/fetchCategories';\r\nimport DeleteCategory from './actions/deleteCategory';\r\nimport InitEditCategoryModal from '../editCategoryModal/actions/init';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  fetchCategories: () => dispatch(FetchCategories()),\r\n  deleteCategory: (id) => dispatch(DeleteCategory(id)),\r\n  onEditCategory: (id) => dispatch(InitEditCategoryModal(id)),\r\n});\r\n\r\nexport default Dispatcher;","import Categories from './Categories';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(Categories);","export default (\r\n    {\r\n      categories: {\r\n        isLoading,\r\n        categories,\r\n        error,\r\n      },\r\n    },\r\n) => ({\r\n  isLoading,\r\n  categories,\r\n  error,\r\n});","import Portal from './Portal';\r\n\r\nexport default Portal;","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends Component {\r\n\r\n  el = document.createElement('div');\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const {children} = this.props;\r\n\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default Portal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Portal from '../portal';\r\n\r\nimport './styles.css';\r\n\r\nconst Modal = (\r\n    {\r\n      onCancel,\r\n      children,\r\n      isShowing,\r\n    },\r\n) => {\r\n\r\n  return (\r\n      <>\r\n        {\r\n          isShowing && (\r\n              <Portal>\r\n                <div\r\n                    className=\"modalOverlay\"\r\n                    onClick={onCancel}\r\n                />\r\n                <div className=\"modalWindow\">\r\n                  {children}\r\n                </div>\r\n              </Portal>\r\n          )\r\n        }\r\n      </>\r\n  );\r\n};\r\nModal.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\nModal.defaultProps = {\r\n  isOpen: false,\r\n  children: null,\r\n};\r\nexport default Modal;","import Modal from './Modal';\r\n\r\nexport default Modal;","import React, {useEffect} from 'react';\r\nimport Modal from '../modal';\r\nimport {Button, Form, Card, Alert} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\n\r\nconst AddCostsModal = (\r\n    {\r\n      isShowing,\r\n      categories,\r\n      isLoading,\r\n      error,\r\n      entity: {\r\n        sum,\r\n        categoryId,\r\n      },\r\n\r\n      init,\r\n      setIsShowing,\r\n      addCosts,\r\n      onChangeEntity,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing]);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Card.Title>\r\n                Добавить трату\r\n              </Card.Title>\r\n              <Form>\r\n                <Form.Group>\r\n                  <label>Сумма</label>\r\n                  <Form.Input\r\n                      value={sum}\r\n                      type=\"number\"\r\n                      placeholder=\"Введите сумму\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          sum: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n                {\r\n                  categories.length > 0 ? (\r\n                      <Form.Group>\r\n                        <label htmlFor=\"exampleControlsInput1\">\r\n                          Категория\r\n                        </label>\r\n                        <Form.Select\r\n                            value={categoryId}\r\n                            onChange={({target: {value}}) => onChangeEntity({\r\n                              categoryId: value,\r\n                            })}>\r\n                          <option value={''}>\r\n                            Выберите\r\n                          </option>\r\n                          {\r\n                            categories.map(item => {\r\n                              return (\r\n                                  <option\r\n                                      key={item.id}\r\n                                      value={item.id}\r\n                                  >\r\n                                    {\r\n                                      item.data().title.capitalize()\r\n                                    }\r\n                                  </option>\r\n                              );\r\n                            })\r\n                          }\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                  ) : (\r\n                      <Alert danger>\r\n                        Сначала создайте категорию\r\n                      </Alert>\r\n                  )\r\n                }\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button\r\n                  disabled={categories?.length <= 0}\r\n                  onClick={categories?.length && addCosts}\r\n                  success\r\n              >\r\n                Добавить трату\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Loader>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default AddCostsModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_CATEGORIES = Symbol('SET_CATEGORIES');\r\n\r\nexport const SetCategories = (categories) => ({\r\n  type: SET_CATEGORIES,\r\n  payload: categories,\r\n});\r\n\r\nexport const MutateCategories = (state, categories) => {\r\n  return update(state, {\r\n    categories: {$set: categories},\r\n  });\r\n};\r\n\r\nexport default SetCategories;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  categories: [],\r\n  isLoading: true,\r\n  error: null,\r\n  entity: {\r\n    sum: '',\r\n    categoryId: '',\r\n  },\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetCategories from './setCategories';\r\nimport SetError from './setError';\r\nimport MakeEmptyEntity from './makeEmptyEntity';\r\n\r\nconst Init = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(MakeEmptyEntity());\r\n    dispatch(SetIsLoading(true));\r\n    const {\r\n      docs: categories,\r\n    } = await firestore.collection('categories').\r\n        where(\r\n            'userId',\r\n            '==',\r\n            firestore.doc(`users/${uid}`),\r\n        ).get();\r\n\r\n    dispatch(SetCategories(categories));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        `\r\n          Ошибка сервера.\r\n          Обратитесь к администратору или попробуйте обновить страницу.\r\n        `,\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default Init;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\nimport firebase from '../../../api';\r\nimport InitWallet from '../../wallet/actions/init';\r\nimport FetchCosts from '../../editCategoryModal/actions/fetchCosts';\r\n\r\nconst AddCosts = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n    const {\r\n      addCostsModal: {\r\n        entity: {\r\n          sum,\r\n          categoryId,\r\n        },\r\n      },\r\n      editCategoryModal: {\r\n        isShowing: isShowingEditCategoryModal,\r\n        entity: {\r\n          id,\r\n        },\r\n      },\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n\r\n    if ((+sum !== 0 && !+sum) || !categoryId) {\r\n      dispatch(SetError(\r\n          'Некоректно заполнены поля',\r\n      ));\r\n      return;\r\n    }\r\n\r\n    await firestore.collection('costs').doc().set({\r\n      date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n      sum: +sum,\r\n      categoryId: firestore.doc(`categories/${categoryId}`),\r\n      userId: firestore.doc(`users/${uid}`),\r\n    });\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(InitWallet());\r\n    dispatch(SetIsLoading(false));\r\n    dispatch(SetIsShowing());\r\n    if (isShowingEditCategoryModal && id) {\r\n      dispatch(FetchCosts(id));\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка добавления траты',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default AddCosts;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport AddCosts from './actions/addCosts';\r\nimport SetEntity from './actions/setEntity';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  addCosts: () => dispatch(AddCosts()),\r\n  init: () => dispatch(Init()),\r\n  onChangeEntity: (data) => dispatch(SetEntity(data)),\r\n});\r\n\r\nexport default Dispatcher;","import AddCostsModal from './AddCostsModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(AddCostsModal);","export default (\r\n    {\r\n      addCostsModal: {\r\n        isShowing,\r\n        categories,\r\n        isLoading,\r\n        error,\r\n        entity,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  categories,\r\n  isLoading,\r\n  error,\r\n  entity,\r\n});","import React, {useEffect} from 'react';\r\nimport Modal from '../modal';\r\nimport {Button, Form, Card, Alert} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\n\r\nconst AddCategoryModal = (\r\n    {\r\n      isShowing,\r\n      isLoading,\r\n      entity: {\r\n        title,\r\n        sum_limit: sumLimit,\r\n      },\r\n      error,\r\n\r\n      setIsShowing,\r\n      onChangeEntity,\r\n      addCategory,\r\n      init,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing, init]);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Card.Title>\r\n                Добавить категорию\r\n              </Card.Title>\r\n              <Form>\r\n                <Form.Group>\r\n                  <label>Название категории</label>\r\n                  <Form.Input\r\n                      value={title}\r\n                      type=\"text\"\r\n                      placeholder=\"Введите название категории\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          title: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <label>Лимит трат</label>\r\n                  <Form.Input\r\n                      value={sumLimit}\r\n                      type=\"number\"\r\n                      placeholder=\"Введите лимит трат\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          sum_limit: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button\r\n                  onClick={addCategory}\r\n                  success\r\n              >\r\n                Добавить категорию\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Loader>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default AddCategoryModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\n\r\nconst AddCategory = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n\r\n    const {\r\n      addCategoryModal: {\r\n        entity,\r\n      },\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    const {sum_limit, title} = entity;\r\n    if (!title || title.length < 5 || (sum_limit !== 0 && !sum_limit)) {\r\n      dispatch(SetError(\r\n          `\r\n          Неккоректно заполнены поля.\r\n          Название должно быть больше 5 символов.\r\n          `,\r\n      ));\r\n      return;\r\n    }\r\n    await firestore.collection('categories').doc().set({\r\n      title: title.toLowerCase(),\r\n      sum_limit,\r\n      userId: firestore.doc(`users/${uid}`),\r\n    });\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(SetIsLoading(false));\r\n    dispatch(SetIsShowing());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Неккоректно заполнены поля',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default AddCategory;\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  error: null,\r\n  entity: {\r\n    title: '',\r\n    sum_limit: '',\r\n  },\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport AddCategory from './actions/addCategory';\r\nimport SetEntity from './actions/setEntity';\r\nimport MakeEmptyEntity from './actions/makeEmptyEntity';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  addCategory: (docId, data) => dispatch(AddCategory(docId, data)),\r\n  onChangeEntity: (data) => dispatch(SetEntity(data)),\r\n  init: () => dispatch(MakeEmptyEntity()),\r\n});\r\n\r\nexport default Dispatcher;","import AddCategoryModal from './AddCategoryModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(AddCategoryModal);","export default (\r\n    {\r\n      addCategoryModal: {\r\n        isShowing,\r\n        entity,\r\n        error,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  entity,\r\n  error,\r\n});","import React from 'react';\r\nimport {BDiv, Button, Collapse, Navbar} from 'bootstrap-4-react';\r\n\r\nconst Header = (\r\n    {\r\n      uid,\r\n\r\n      logout,\r\n      setIsShowingAddCostsModal,\r\n      setIsShowingAddCategoryModal,\r\n      setIsShowingAddIncomesModal,\r\n    },\r\n) => {\r\n\r\n  window.addEventListener('message', (e) => {\r\n    alert('MESSAGE RECIEVED');\r\n  });\r\n\r\n  window.testmem = setIsShowingAddIncomesModal;\r\n\r\n  return (\r\n      <Navbar expand=\"lg\" dark bg=\"dark\" mb=\"3\" sticky=\"top\">\r\n        <Navbar.Brand href=\"#\">\r\n          Финансы!!!\r\n        </Navbar.Brand>\r\n        <Navbar.Toggler target={'#navbar'}/>\r\n        {\r\n          uid && (\r\n              <Collapse navbar id={'navbar'} justifyContent=\"end\">\r\n                <BDiv my=\"2 lg-0\">\r\n                  <Button\r\n                      success\r\n                      mr={2}\r\n                      mt={2}\r\n                      onClick={setIsShowingAddCategoryModal}\r\n                  >\r\n                    Добавить категорию\r\n                  </Button>\r\n                  <Button\r\n                      success\r\n                      mr={2}\r\n                      mt={2}\r\n                      onClick={setIsShowingAddIncomesModal}\r\n                  >\r\n                    Добавить доход\r\n                  </Button>\r\n                  <Button\r\n                      info\r\n                      mr={2}\r\n                      mt={2}\r\n                      onClick={setIsShowingAddCostsModal}\r\n                  >\r\n                    Добавить трату\r\n                  </Button>\r\n                  <Button\r\n                      info\r\n                      mr={2}\r\n                      mt={2}\r\n                      onClick={(e) => {\r\n                        // window.TEST.postMessage('data');\r\n                        // e.postMessage('data', '*');\r\n                        window.postMessage('data', '*');\r\n                        // window.postMessage('data', '*');\r\n                        // const bc = new BroadcastChannel('test');\r\n                        // bc.postMessage('message_data');\r\n\r\n                        //   const Print = new MessageChannel();\r\n                        //   Print.postMessage('Test');\r\n                        //   window.postMessage('Test', '*');\r\n                      }}\r\n                  >\r\n                    Добавить трату\r\n                  </Button>\r\n                  <Button\r\n                      warning\r\n                      mr={2}\r\n                      mt={2}\r\n                      onClick={logout}\r\n                  >\r\n                    Выйти\r\n                  </Button>\r\n                </BDiv>\r\n              </Collapse>\r\n          )\r\n        }\r\n      </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","const Logout = () => async (\r\n    dispatch,\r\n    getState,\r\n    {getFirebase},\r\n) => {\r\n  try {\r\n    await getFirebase().auth().signOut();\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport default Logout;","import SetIsShowingAddCostsModal from '../addCostsModal/actions/setIsShowing';\r\nimport SetIsShowingAddCategoryModal\r\n  from '../addCategoryModal/actions/setIsShowing';\r\nimport SetIsShowingAddIncomesModal\r\n  from '../addIncomesModal/actions/setIsShowing';\r\nimport Logout from './actions/logout';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  logout: () => dispatch(Logout()),\r\n  setIsShowingAddCostsModal: () => dispatch(SetIsShowingAddCostsModal()),\r\n  setIsShowingAddCategoryModal: () => dispatch(SetIsShowingAddCategoryModal()),\r\n  setIsShowingAddIncomesModal: () => dispatch(SetIsShowingAddIncomesModal()),\r\n});\r\n\r\nexport default Dispatcher;","import Header from './Header';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport dispatcher from './dispatcher';\r\nimport connector from './connector';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(Header);","export default (\r\n    {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    },\r\n) => ({\r\n  uid,\r\n})","export const formatter = new Intl.NumberFormat('ru-RU', {\r\n  minimumFractionDigits: 0,\r\n});","import React, {useEffect, useMemo} from 'react';\r\nimport Loader from '../loader';\r\nimport {formatter} from '../../helpers';\r\nimport {EditOutlined} from '@ant-design/icons';\r\nimport {Button} from 'bootstrap-4-react';\r\n\r\nconst Wallet = (\r\n    {\r\n      lossesPerMonth,\r\n      incomesPerMonth,\r\n      totalSum,\r\n      isLoading,\r\n\r\n      init,\r\n      onEditWallet,\r\n    },\r\n) => {\r\n\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  return (\r\n      <Loader isLoading={isLoading}>\r\n        <h1>Кошелек:\r\n          <EditOutlined\r\n              style={{\r\n                ...iconStyle,\r\n                backgroundColor: '#eee',\r\n                padding: 10,\r\n                marginLeft: 5,\r\n                fontSize: 25,\r\n              }}\r\n              onClick={onEditWallet}\r\n          /></h1>\r\n        <h5>\r\n          Общая сумма:&nbsp;{formatter.format(totalSum)}&nbsp;₽\r\n        </h5>\r\n        <h5>\r\n          Траты за месяц:&nbsp;{formatter.format(lossesPerMonth)}&nbsp;₽\r\n        </h5>\r\n        <h5>\r\n          Доходы за месяц:&nbsp;{formatter.format(incomesPerMonth)}&nbsp;₽\r\n        </h5>\r\n      </Loader>\r\n  );\r\n};\r\n\r\nexport default Wallet;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import Init from './actions/init';\r\nimport SetIsShowingEditWalletModal from '../editWalletModal/actions/setIsShowing';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  init: () => dispatch(Init()),\r\n  onEditWallet: () => dispatch(SetIsShowingEditWalletModal()),\r\n});\r\n\r\nexport default Dispatcher;","import Wallet from './Wallet';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(Wallet);","export default (\r\n    {\r\n      wallet: {\r\n        lossesPerMonth,\r\n        incomesPerMonth,\r\n        totalSum,\r\n        isLoading,\r\n      },\r\n    },\r\n) => ({\r\n  lossesPerMonth,\r\n  incomesPerMonth,\r\n  totalSum,\r\n  isLoading,\r\n});","import React, {useEffect} from 'react';\r\nimport Modal from '../modal';\r\nimport {Button, Form, Card, Alert} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\n\r\nconst AddIncomesModal = (\r\n    {\r\n      isShowing,\r\n      isLoading,\r\n      error,\r\n      entity: {\r\n        sum,\r\n      },\r\n\r\n      init,\r\n      setIsShowing,\r\n      addIncomes,\r\n      onChangeEntity,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing]);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Card.Title>\r\n                Добавить доход\r\n              </Card.Title>\r\n              <Form>\r\n                <Form.Group>\r\n                  <label>Сумма</label>\r\n                  <Form.Input\r\n                      value={sum}\r\n                      type=\"number\"\r\n                      placeholder=\"Введите сумму\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          sum: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button\r\n                  onClick={addIncomes}\r\n                  success\r\n              >\r\n                Добавить доход\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Loader>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default AddIncomesModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  isLoading: true,\r\n  error: null,\r\n  entity: {\r\n    sum: '',\r\n  },\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import MakeEmptyEntity from './makeEmptyEntity';\r\nimport SetIsLoading from './setIsLoading';\r\n\r\nconst Init = () => async (dispatch) => {\r\n  dispatch(SetIsLoading(false));\r\n  dispatch(MakeEmptyEntity());\r\n};\r\n\r\nexport default Init;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport firebase from '../../../api';\r\nimport InitWallet from '../../wallet/actions/init';\r\n\r\nconst AddIncomes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n    const {\r\n      addIncomesModal: {\r\n        entity: {\r\n          sum,\r\n        },\r\n      },\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n\r\n    if (!+sum) {\r\n      dispatch(SetError(\r\n          'Некоректно заполнены поля',\r\n      ));\r\n      return;\r\n    }\r\n\r\n    await firestore.collection('incomes').doc().set({\r\n      date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n      sum: +sum,\r\n      userId: firestore.doc(`users/${uid}`),\r\n    });\r\n\r\n    dispatch(InitWallet());\r\n    dispatch(SetIsLoading(false));\r\n    dispatch(SetIsShowing());\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка добавления траты',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default AddIncomes;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport AddIncomes from './actions/addIncomes';\r\nimport SetEntity from './actions/setEntity';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  addIncomes: () => dispatch(AddIncomes()),\r\n  init: () => dispatch(Init()),\r\n  onChangeEntity: (data) => dispatch(SetEntity(data)),\r\n});\r\n\r\nexport default Dispatcher;","import AddIncomesModal from './AddIncomesModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(AddIncomesModal);","export default (\r\n    {\r\n      addIncomesModal: {\r\n        isShowing,\r\n        isLoading,\r\n        error,\r\n        entity,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  isLoading,\r\n  error,\r\n  entity,\r\n});","import React, {\r\n  Fragment,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Modal from '../modal';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Card,\r\n  Alert,\r\n  ListGroup,\r\n  Lead,\r\n} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\nimport {CloseCircleFilled} from '@ant-design/icons';\r\nimport {formatter} from '../../helpers';\r\n\r\nconst EditCategoryModal = (\r\n    {\r\n      isShowing,\r\n      isLoadingEntity,\r\n      isLoadingCosts,\r\n      entity,\r\n      error,\r\n      costs,\r\n\r\n      setIsShowing,\r\n      editCategory,\r\n      deleteCosts,\r\n    },\r\n) => {\r\n  const [copiedEntity, setCopiedEntity] = useState(entity);\r\n  useEffect(() => {\r\n    setCopiedEntity(entity);\r\n  }, [entity]);\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  const onChangeEntity = useCallback((obj) => {\r\n    setCopiedEntity(prevState => ({...prevState, ...obj}));\r\n  }, []);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Fragment>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Loader isLoading={isLoadingEntity}>\r\n                <Card.Title>\r\n                  Изменение категории \"{entity.title}\"\r\n                </Card.Title>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <label>Название категории</label>\r\n                    <Form.Input\r\n                        value={copiedEntity.title}\r\n                        type=\"text\"\r\n                        placeholder=\"Введите название категории\"\r\n                        onChange={\r\n                          ({target: {value}}) => onChangeEntity({\r\n                            title: value,\r\n                          })\r\n                        }\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label>Лимит трат</label>\r\n                    <Form.Input\r\n                        value={copiedEntity.sum_limit}\r\n                        type=\"number\"\r\n                        placeholder=\"Введите лимит трат\"\r\n                        onChange={\r\n                          ({target: {value}}) => onChangeEntity({\r\n                            sum_limit: value,\r\n                          })\r\n                        }\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Loader>\r\n\r\n              <Loader isLoading={isLoadingCosts}>\r\n                {\r\n                  costs.length > 0 && (\r\n                      <ListGroup\r\n                          style={{\r\n                            overflowY: 'scroll',\r\n                            height: 250,\r\n                            padding: 10,\r\n                          }}\r\n                      >\r\n                        {\r\n                          costs.map(item => {\r\n                            return (\r\n                                <ListGroup.Item\r\n                                    key={item.id}\r\n                                    display=\"flex\"\r\n                                    justifyContent=\"between\"\r\n                                    mb={2}\r\n                                >\r\n                                  <div>\r\n                                    <Lead>\r\n                                      Сумма:&nbsp;{\r\n                                      formatter.format(\r\n                                          item.sum,\r\n                                      )\r\n                                    }&nbsp;₽\r\n                                    </Lead>\r\n                                    <Lead>\r\n                                      Дата:&nbsp;\r\n                                      {\r\n                                        item.date.toDate().\r\n                                            toLocaleDateString('ru-RU')\r\n                                      }\r\n                                    </Lead>\r\n                                  </div>\r\n\r\n                                  <CloseCircleFilled\r\n                                      style={{\r\n                                        ...iconStyle,\r\n                                        fontSize: 30,\r\n                                        color: 'red',\r\n                                      }}\r\n                                      onClick={() => deleteCosts(item.id)}\r\n                                  />\r\n                                </ListGroup.Item>\r\n                            );\r\n                          })\r\n                        }\r\n                      </ListGroup>\r\n                  )\r\n                }\r\n\r\n              </Loader>\r\n            </Card.Body>\r\n\r\n            <Card.Footer>\r\n              <Button\r\n                  onClick={() => editCategory(copiedEntity)}\r\n                  success\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Fragment>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default EditCategoryModal;","import {firestore} from 'Api';\r\nimport SetIsLoadingEntity from './setIsLoadingEntity';\r\nimport SetError from './setError';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\nimport InitWallet from '../../wallet/actions/init';\r\nimport FetchCosts from './fetchCosts';\r\n\r\nconst DeleteCosts = (costsId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      editCategoryModal: {\r\n        entity: {\r\n          id,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(SetIsLoadingEntity(true));\r\n\r\n    await firestore.collection('costs').doc(costsId).delete();\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(InitWallet());\r\n    dispatch(FetchCosts(id));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка удаления траты',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoadingEntity(false));\r\n  }\r\n};\r\n\r\nexport default DeleteCosts;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoadingEntity from './setIsLoadingEntity';\r\nimport SetError from './setError';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\n\r\nconst EditCategory = (entityObj) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(SetIsLoadingEntity(true));\r\n\r\n    const {id, sum_limit, title} = entityObj;\r\n    if ((!title && title.length < 5) || (sum_limit !== 0 && !sum_limit)) {\r\n      console.log(1111);\r\n      dispatch(SetError(\r\n          `\r\n          Неккоректно заполнены поля.\r\n          Название должно быть больше 5 символов.\r\n          `,\r\n      ));\r\n      return;\r\n    }\r\n    await firestore.collection('categories').doc(id).set({\r\n      title: title.toLowerCase(),\r\n      sum_limit,\r\n      userId: firestore.doc(`users/${uid}`),\r\n    });\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Неккоректно заполнены поля',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoadingEntity(false));\r\n  }\r\n};\r\n\r\nexport default EditCategory;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport DeleteCosts from './actions/deleteCosts';\r\nimport EditCategory from './actions/editCategory';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  editCategory: (entityObj) => dispatch(EditCategory(entityObj)),\r\n  deleteCosts: (costsId) => dispatch(DeleteCosts(costsId)),\r\n  init: () => dispatch(Init()),\r\n});\r\n\r\nexport default Dispatcher;","import EditCategoryModal from './EditCategoryModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(EditCategoryModal);","export default (\r\n    {\r\n      editCategoryModal: {\r\n        isShowing,\r\n        entity,\r\n        error,\r\n        isLoadingEntity,\r\n        isLoadingCosts,\r\n        costs,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  entity,\r\n  error,\r\n  isLoadingEntity,\r\n  isLoadingCosts,\r\n  costs,\r\n});","import React, {\r\n  Fragment,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Modal from '../modal';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Card,\r\n  Alert,\r\n  ListGroup,\r\n  Badge,\r\n  Lead,\r\n} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\nimport {CloseCircleFilled} from '@ant-design/icons';\r\nimport {formatter} from '../../helpers';\r\n\r\nconst EditWalletModal = (\r\n    {\r\n      isShowing,\r\n      isLoadingIncomes,\r\n      error,\r\n      incomes,\r\n\r\n      setIsShowing,\r\n      deleteIncomes,\r\n      init,\r\n    },\r\n) => {\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing, init]);\r\n\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Fragment>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <h4>\r\n                Доходы за месяц\r\n              </h4>\r\n              <Loader isLoading={isLoadingIncomes}>\r\n                {\r\n                  incomes.length > 0 ? (\r\n                      <ListGroup\r\n                          style={{\r\n                            overflowY: 'scroll',\r\n                            height: 250,\r\n                            padding: 10,\r\n                          }}\r\n                      >\r\n                        {\r\n                          incomes.map(item => {\r\n                            return (\r\n                                <ListGroup.Item\r\n                                    key={item.id}\r\n                                    display=\"flex\"\r\n                                    justifyContent=\"between\"\r\n                                    mb={2}\r\n                                >\r\n                                  <div>\r\n                                    <Lead>\r\n                                      Сумма:&nbsp;{\r\n                                      formatter.format(\r\n                                          item.sum,\r\n                                      )\r\n                                    }&nbsp;₽\r\n                                    </Lead>\r\n                                    <Lead>\r\n                                      Дата:&nbsp;\r\n                                      {\r\n                                        item.date.toDate().\r\n                                            toLocaleDateString('ru-RU')\r\n                                      }\r\n                                    </Lead>\r\n                                  </div>\r\n\r\n                                  <CloseCircleFilled\r\n                                      style={{\r\n                                        ...iconStyle,\r\n                                        fontSize: 30,\r\n                                        color: 'red',\r\n                                      }}\r\n                                      onClick={() => deleteIncomes(item.id)}\r\n                                  />\r\n                                </ListGroup.Item>\r\n                            );\r\n                          })\r\n                        }\r\n                      </ListGroup>\r\n                  ) : (\r\n                      <Lead>\r\n                        Ничего не найдено\r\n                      </Lead>\r\n                  )\r\n                }\r\n\r\n              </Loader>\r\n            </Card.Body>\r\n          </Card>\r\n        </Fragment>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default EditWalletModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_INCOMES = Symbol('SET_INCOMES');\r\n\r\nexport const SetIncomes = (incomes) => ({\r\n  type: SET_INCOMES,\r\n  payload: incomes,\r\n});\r\n\r\nexport const MutateIncomes = (state, incomes) => {\r\n  return update(state, {\r\n    incomes: {$set: incomes},\r\n  });\r\n};\r\n\r\nexport default SetIncomes;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING_INCOMES = Symbol('SET_IS_LOADING_INCOMES');\r\n\r\nexport const SetIsLoadingIncomes = (isLoadingIncomes) => ({\r\n  type: SET_IS_LOADING_INCOMES,\r\n  payload: isLoadingIncomes,\r\n});\r\n\r\nexport const MutateIsLoadingIncomes = (state, isLoadingIncomes) => {\r\n  return update(state, {\r\n    isLoadingIncomes: {$set: isLoadingIncomes},\r\n  });\r\n};\r\n\r\nexport default SetIsLoadingIncomes;","import firebase, {firestore} from 'Api';\r\nimport SetError from './setError';\r\nimport SetIncomes from './setIncomes';\r\nimport SetIsLoadingIncomes from './setIsLoadingIncomes';\r\n\r\nconst FetchIncomes = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(SetIsLoadingIncomes(true));\r\n    const date = new Date();\r\n\r\n    const {\r\n      docs: incomes,\r\n    } = await firestore.collection('incomes').where(\r\n        'userId',\r\n        '==',\r\n        firestore.doc(`users/${uid}`),\r\n    ).where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 1)),\r\n    ).where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 31)),\r\n    ).get();\r\n\r\n    const mappedIncomes = incomes.map(item => ({\r\n      id: item.id,\r\n      ...item.data(),\r\n    }));\r\n\r\n    dispatch(SetIncomes(mappedIncomes));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoadingIncomes(false));\r\n  }\r\n};\r\n\r\nexport default FetchIncomes;","import SetError from './setError';\r\nimport FetchIncomes from './fetchIncomes';\r\nimport SetIsLoadingIncomes from './setIsLoadingIncomes';\r\n\r\nconst Init = () => async (dispatch) => {\r\n  try {\r\n    await dispatch(FetchIncomes());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(\r\n        SetError('Ошибка при загрузке данных для редактирования сущнности'),\r\n    );\r\n  } finally {\r\n    dispatch(SetIsLoadingIncomes(false));\r\n  }\r\n};\r\n\r\nexport default Init;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoadingIncomes from './setIsLoadingIncomes';\r\nimport SetError from './setError';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\nimport InitWallet from '../../wallet/actions/init';\r\nimport FetchIncomes from './fetchIncomes';\r\n\r\nconst DeleteIncomes = (incomesId) => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsLoadingIncomes(true));\r\n\r\n    await firestore.collection('incomes').doc(incomesId).delete();\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(InitWallet());\r\n    dispatch(FetchIncomes());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка удаления доходов',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoadingIncomes(false));\r\n  }\r\n};\r\n\r\nexport default DeleteIncomes;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport DeleteIncomes from './actions/deleteIncomes';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  deleteIncomes: (costsId) => dispatch(DeleteIncomes(costsId)),\r\n  init: () => dispatch(Init()),\r\n});\r\n\r\nexport default Dispatcher;","import EditWalletModal from './EditWalletModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(EditWalletModal);","export default (\r\n    {\r\n      editWalletModal: {\r\n        isShowing,\r\n        error,\r\n        isLoadingIncomes,\r\n        incomes,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  error,\r\n  isLoadingIncomes,\r\n  incomes,\r\n});","import React from 'react';\r\nimport {Container, Form, Button} from 'bootstrap-4-react';\r\n\r\nconst Register = () => {\r\n  return (\r\n      <Container>\r\n        <h1>REGISTER</h1>\r\n        <Form>\r\n          <Form.Group>\r\n            <label>Email address</label>\r\n            <Form.Input\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <label>Password</label>\r\n            <Form.Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n            />\r\n          </Form.Group>\r\n          <Button primary type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default Register;","import {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport Register from './Register';\r\n\r\nexport default compose()(Register);","import React, {useCallback} from 'react';\r\nimport {Container, Form, Button, Alert} from 'bootstrap-4-react';\r\nimport {Redirect} from 'react-router';\r\nimport Loader from '../loader';\r\n\r\nconst Login = (\r\n    {\r\n      isLoading,\r\n      error,\r\n      email,\r\n      password,\r\n      uid,\r\n\r\n      login,\r\n      onChangeForm,\r\n    },\r\n) => {\r\n\r\n  const handleOnSubmit = useCallback((event) => {\r\n    event.preventDefault();\r\n    login();\r\n  }, []);\r\n\r\n  if (uid) {\r\n    return (\r\n        <Redirect to={'/'}/>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <Container>\r\n        <h1>Авторизация</h1>\r\n        {\r\n          error && (\r\n              <Alert danger>\r\n                {error}\r\n              </Alert>\r\n          )\r\n        }\r\n        <Loader isLoading={isLoading}>\r\n          <Form onSubmit={handleOnSubmit}>\r\n            <Form.Group>\r\n              <label>Почта</label>\r\n              <Form.Input\r\n                  value={email}\r\n                  onChange={\r\n                    ({target: {value}}) => onChangeForm({email: value})\r\n                  }\r\n                  type=\"email\"\r\n                  placeholder=\"Введите почту\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <label>Пароль</label>\r\n              <Form.Input\r\n                  value={password}\r\n                  onChange={\r\n                    ({target: {value}}) => onChangeForm({password: value})\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"Введите пароль\"\r\n              />\r\n            </Form.Group>\r\n            <Button primary type=\"submit\">\r\n              Войти\r\n            </Button>\r\n          </Form>\r\n        </Loader>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default Login;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import setError from './setError';\r\nimport setIsLoading from './setIsLoading';\r\n\r\nconst Login = () => async (dispatch, getState, {getFirebase, getFirestore}) => {\r\n  try {\r\n    dispatch(setIsLoading(true));\r\n    const {\r\n      login: {\r\n        form: {\r\n          email,\r\n          password,\r\n        },\r\n      },\r\n    } = getState();\r\n\r\n    await getFirebase().login({\r\n      email,\r\n      password,\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(setError(\r\n        'Произошла ошибка',\r\n    ));\r\n  } finally {\r\n    dispatch(setIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default Login;","import update from 'immutability-helper';\r\n\r\nexport const SET_FORM = Symbol('SET_FORM');\r\n\r\nexport const SetForm = (data) => ({\r\n  type: SET_FORM,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateForm = (state, data) => {\r\n  return update(state, {\r\n    form: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetForm;","import Login from './actions/login';\r\nimport SetForm from './actions/setForm';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  login: () => dispatch(Login()),\r\n  onChangeForm: (data) => dispatch(SetForm(data)),\r\n});\r\n\r\nexport default Dispatcher;","import {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport Login from './Login';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher)\r\n)(Login);","export default (\r\n    {\r\n      login: {\r\n        form: {\r\n          email,\r\n          password,\r\n        },\r\n        isLoading,\r\n        error,\r\n      },\r\n      firebase: {\r\n        auth: {\r\n          uid,\r\n        },\r\n      },\r\n    },\r\n) => ({\r\n  isLoading,\r\n  error,\r\n  email,\r\n  password,\r\n  uid,\r\n});","import React from 'react';\r\nimport {isLoaded, isEmpty} from 'react-redux-firebase';\r\nimport {Redirect, Route} from 'react-router';\r\n\r\nconst PrivateRoute = (\r\n    {\r\n      children,\r\n      auth,\r\n      redirectTo,\r\n      ...rest\r\n    },\r\n) => {\r\n  return (\r\n      <Route\r\n          {...rest}\r\n          render={({location}) =>\r\n              isLoaded(auth) && !isEmpty(auth) ? (\r\n                  children\r\n              ) : (\r\n                  <Redirect\r\n                      to={{\r\n                        pathname: '/login',\r\n                        state: {from: location},\r\n                      }}\r\n                  />\r\n              )\r\n          }\r\n      />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport connector from './connector';\r\n\r\nexport default compose(\r\n    connect(connector, null),\r\n)(PrivateRoute);","export default (\r\n    {\r\n      firebase: {\r\n        auth,\r\n      },\r\n    },\r\n) => ({\r\n  auth,\r\n});","import React, {Fragment} from 'react';\r\nimport Categories from '../categories';\r\nimport {Container} from 'bootstrap-4-react';\r\nimport AddCostsModal from '../addCostsModal';\r\nimport AddCategoryModal from '../addCategoryModal';\r\nimport Header from '../header';\r\nimport Wallet from '../wallet';\r\nimport AddIncomesModal from '../addIncomesModal';\r\nimport EditCategoryModal from '../editCategoryModal';\r\nimport EditWalletModal from '../editWalletModal';\r\nimport {Redirect, Route, Switch} from 'react-router';\r\nimport Register from '../register';\r\nimport Login from '../login';\r\nimport PrivateRoute from '../privateRoute';\r\nimport {isLoaded, isEmpty} from 'react-redux-firebase';\r\n\r\nconst Layout = (\r\n    {\r\n      auth,\r\n    },\r\n) => {\r\n  return (\r\n      <Fragment>\r\n        <Header/>\r\n\r\n        {\r\n          isLoaded(auth) && (\r\n              <Switch>\r\n\r\n                <PrivateRoute exact path={'/'}>\r\n\r\n                  <AddCostsModal/>\r\n                  <AddCategoryModal/>\r\n                  <AddIncomesModal/>\r\n                  <EditCategoryModal/>\r\n                  <EditWalletModal/>\r\n\r\n                  <Container>\r\n                    <Wallet/>\r\n                    <Categories/>\r\n                  </Container>\r\n\r\n                </PrivateRoute>\r\n                <Route path={'/register'}>\r\n                  <Register/>\r\n                </Route>\r\n\r\n                <Route path={'/login'}>\r\n                  <Login/>\r\n                </Route>\r\n\r\n                <Redirect to={'/login'}/>\r\n              </Switch>\r\n          )\r\n        }\r\n\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;","import {compose} from 'redux';\r\nimport Layout from './Layout';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\n\r\nexport default compose(\r\n    connect(connector, null),\r\n)(Layout);","export default (\r\n    {\r\n      firebase: {\r\n        auth,\r\n      },\r\n    },\r\n) => ({\r\n  auth,\r\n})","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n  categories: [],\r\n  isLoadingCategories: true,\r\n  isLoading: true,\r\n};","import {\r\n  MutateIsLoading,\r\n  SET_IS_LOADING,\r\n} from './actions/setIsLoading';\r\nimport initialState from './defaultState';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {\r\n  MutateCategories,\r\n  SET_CATEGORIES,\r\n} from './actions/setCategories';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    case SET_CATEGORIES:\r\n      return MutateCategories(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateIsLoading, SET_IS_LOADING} from './actions/setIsLoading';\r\nimport {MutateCategories, SET_CATEGORIES} from './actions/setCategories';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_CATEGORIES:\r\n      return MutateCategories(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","export default ({\r\n  entity: {\r\n    totalSum: 0,\r\n    loss: 0,\r\n    income: 0,\r\n  },\r\n  isLoading: false,\r\n})\r\n;","import initialState from './defaultState';\r\nimport {MutateIsLoading, SET_IS_LOADING} from './actions/setIsLoading';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {\r\n  MutateLossesPerMonth,\r\n  SET_LOSSES_PER_MONTH,\r\n} from './actions/setLossesPerMonth';\r\nimport {MutateTotalSum, SET_TOTAL_SUM} from './actions/setTotalSum';\r\nimport {\r\n  MutateIncomesPerMonth,\r\n  SET_INCOMES_PER_MONTH,\r\n} from './actions/setIncomesPerMonth';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_LOSSES_PER_MONTH:\r\n      return MutateLossesPerMonth(state, payload);\r\n    case SET_TOTAL_SUM:\r\n      return MutateTotalSum(state, payload);\r\n    case SET_INCOMES_PER_MONTH:\r\n      return MutateIncomesPerMonth(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateIsLoading, SET_IS_LOADING} from './actions/setIsLoading';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {MutateCosts, SET_COSTS} from './actions/setCosts';\r\nimport {\r\n  MutateIsLoadingEntity,\r\n  SET_IS_LOADING_ENTITY,\r\n} from './actions/setIsLoadingEntity';\r\nimport {\r\n  MutateIsLoadingCosts,\r\n  SET_IS_LOADING_COSTS,\r\n} from './actions/setIsLoadingCosts';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_IS_LOADING_ENTITY:\r\n      return MutateIsLoadingEntity(state, payload);\r\n    case SET_IS_LOADING_COSTS:\r\n      return MutateIsLoadingCosts(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    case SET_COSTS:\r\n      return MutateCosts(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","export default ({\r\n  isShowing: false,\r\n  isLoadingIncomes: false,\r\n  error: null,\r\n  incomes: [],\r\n});","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {MutateIncomes, SET_INCOMES} from './actions/setIncomes';\r\nimport {\r\n  MutateIsLoadingIncomes,\r\n  SET_IS_LOADING_INCOMES,\r\n} from './actions/setIsLoadingIncomes';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    case SET_INCOMES:\r\n      return MutateIncomes(state, payload);\r\n    case SET_IS_LOADING_INCOMES:\r\n      return MutateIsLoadingIncomes(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","export default ({\r\n  form: {\r\n    email: '',\r\n    password: '',\r\n  },\r\n  error: null,\r\n  isLoading: false,\r\n});","import initialState from './defaultState';\r\nimport {MutateIsLoading, SET_IS_LOADING} from './actions/setIsLoading';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {MutateForm, SET_FORM} from './actions/setForm';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_FORM:\r\n      return MutateForm(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport firebase from 'Api';\r\nimport categoriesReducer from './components/categories/reducer';\r\nimport addCostsModalReducer from './components/addCostsModal/reducer';\r\nimport addCategoryModalReducer from './components/addCategoryModal/reducer';\r\nimport walletReducer from './components/wallet/reducer';\r\nimport addIncomesModalReducer from './components/addIncomesModal/reducer';\r\nimport editCategoryModalReducer from './components/editCategoryModal/reducer';\r\nimport editWalletModalReducer from './components/editWalletModal/reducer';\r\nimport loginReducer from './components/login/reducer';\r\nimport {\r\n  firebaseReducer,\r\n  getFirebase,\r\n} from 'react-redux-firebase';\r\nimport {firestoreReducer, getFirestore} from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n  categories: categoriesReducer,\r\n  addCostsModal: addCostsModalReducer,\r\n  addCategoryModal: addCategoryModalReducer,\r\n  addIncomesModal: addIncomesModalReducer,\r\n  wallet: walletReducer,\r\n  editCategoryModal: editCategoryModalReducer,\r\n  editWalletModal: editWalletModalReducer,\r\n  login: loginReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk.withExtraArgument({\r\n              getFirebase,\r\n              getFirestore,\r\n            }),\r\n        ),\r\n    ),\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport firebase from 'Api';\r\nimport './index.css';\r\nimport Layout from './components/layout';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {ReactReduxFirebaseProvider} from 'react-redux-firebase';\r\nimport {createFirestoreInstance} from 'redux-firestore';\r\nimport {isLoaded, isEmpty} from 'react-redux-firebase';\r\n\r\nString.prototype.capitalize = function() {\r\n  return this.charAt(0).toUpperCase() + this.slice(1);\r\n};\r\n\r\nconst firebaseConfig = {\r\n  attachAuthIsReady: true,\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n  onAuthStateChanged: (user) => {\r\n    if (user) {\r\n      console.log(user);\r\n      return <h1>a</h1>;\r\n    }\r\n  },\r\n};\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <ReactReduxFirebaseProvider\r\n            config={firebaseConfig}\r\n            dispatch={store.dispatch}\r\n            firebase={firebase}\r\n            createFirestoreInstance={createFirestoreInstance}\r\n        >\r\n          <HashRouter>\r\n            <Layout/>\r\n          </HashRouter>\r\n        </ReactReduxFirebaseProvider>\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}