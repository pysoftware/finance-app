{"version":3,"sources":["components/loader/Loader.js","components/spinner/index.js","components/spinner/Spinner.js","components/loader/index.js","components/loader/styles.js","components/categories/components/categoryCard/CategoryCard.js","components/categories/components/categoryCard/index.js","components/categories/Categories.js","api/index.js","components/categories/actions/setIsLoading.js","components/categories/actions/setCategories.js","components/categories/actions/setError.js","components/categories/actions/fetchCategories.js","components/wallet/actions/setIsLoading.js","components/wallet/actions/setTotalSum.js","components/wallet/actions/setError.js","components/wallet/actions/setIncomesPerMonth.js","components/wallet/actions/setLossesPerMonth.js","components/wallet/actions/init.js","components/categories/actions/deleteCategory.js","components/editCategoryModal/actions/setError.js","components/editCategoryModal/actions/setEntity.js","components/editCategoryModal/defaultState.js","components/editCategoryModal/actions/makeEmptyEntity.js","components/editCategoryModal/actions/setIsShowing.js","components/editCategoryModal/actions/setCosts.js","components/editCategoryModal/actions/setIsLoadingCosts.js","components/editCategoryModal/actions/fetchCosts.js","components/editCategoryModal/actions/setIsLoadingEntity.js","components/editCategoryModal/actions/fetchEntity.js","components/editCategoryModal/actions/init.js","components/categories/dispatcher.js","components/categories/index.js","components/categories/connector.js","components/portal/index.js","components/portal/Portal.js","components/modal/Modal.js","components/modal/index.js","components/addCostsModal/AddCostsModal.js","components/addCostsModal/actions/setIsShowing.js","components/addCostsModal/actions/setIsLoading.js","components/addCostsModal/actions/setCategories.js","components/addCostsModal/actions/setError.js","components/addCostsModal/actions/setEntity.js","components/addCostsModal/defaultState.js","components/addCostsModal/actions/makeEmptyEntity.js","components/addCostsModal/actions/init.js","components/addCostsModal/actions/addCosts.js","components/addCostsModal/dispatcher.js","components/addCostsModal/index.js","components/addCostsModal/connector.js","components/addCategoryModal/AddCategoryModal.js","components/addCategoryModal/actions/setIsShowing.js","components/addCategoryModal/actions/setIsLoading.js","components/addCategoryModal/actions/setError.js","components/addCategoryModal/actions/addCategory.js","components/addCategoryModal/actions/setEntity.js","components/addCategoryModal/defaultState.js","components/addCategoryModal/actions/makeEmptyEntity.js","components/addCategoryModal/dispatcher.js","components/addCategoryModal/index.js","components/addCategoryModal/connector.js","components/header/Header.js","components/addIncomesModal/actions/setIsShowing.js","components/header/dispatcher.js","components/header/index.js","helpers/number-formmater.js","components/wallet/Wallet.js","components/editWalletModal/actions/setIsShowing.js","components/wallet/dispatcher.js","components/wallet/index.js","components/wallet/connector.js","components/addIncomesModal/AddIncomesModal.js","components/addIncomesModal/actions/setError.js","components/addIncomesModal/actions/setEntity.js","components/addIncomesModal/defaultState.js","components/addIncomesModal/actions/makeEmptyEntity.js","components/addIncomesModal/actions/setIsLoading.js","components/addIncomesModal/actions/init.js","components/addIncomesModal/actions/addIncomes.js","components/addIncomesModal/dispatcher.js","components/addIncomesModal/index.js","components/addIncomesModal/connector.js","components/editCategoryModal/EditCategoryModal.js","components/editCategoryModal/actions/deleteCosts.js","components/editCategoryModal/actions/editCategory.js","components/editCategoryModal/dispatcher.js","components/editCategoryModal/index.js","components/editCategoryModal/connector.js","components/editWalletModal/EditWalletModal.js","components/editWalletModal/actions/setError.js","components/editWalletModal/actions/setIncomes.js","components/editWalletModal/actions/setIsLoadingIncomes.js","components/editWalletModal/actions/fetchIncomes.js","components/editWalletModal/actions/init.js","components/editWalletModal/actions/deleteIncomes.js","components/editWalletModal/dispatcher.js","components/editWalletModal/index.js","components/editWalletModal/connector.js","components/layout/index.js","components/layout/Layout.js","serviceWorker.js","components/categories/defaultState.js","components/categories/reducer.js","components/addCostsModal/reducer.js","components/addCategoryModal/reducer.js","components/wallet/defaultState.js","components/wallet/reducer.js","components/addIncomesModal/reducer.js","components/editCategoryModal/reducer.js","components/editWalletModal/defaultState.js","components/editWalletModal/reducer.js","store.js","index.js"],"names":["Loader","Spinner","classes","children","isLoading","className","loader","compose","withStyles","CategoryCard","title","sumLimit","costsSumPerMonth","onDelete","onEdit","iconStyle","useMemo","display","alignItems","justifyContent","cursor","padding","fontSize","Body","Title","toUpperCase","Text","text","Footer","success","mr","onClick","EditOutlined","style","danger","CloseCircleFilled","Categories","categories","fetchCategories","deleteCategory","onEditCategory","useEffect","items","map","item","index","push","key","id","sum_limit","length","Deck","mb","mt","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","SET_IS_LOADING","Symbol","MutateIsLoading","state","loadingStatus","update","$set","SetIsLoading","type","payload","SET_CATEGORIES","MutateCategories","SetCategories","SET_ERROR","MutateError","message","error","SetError","FetchCategories","dispatch","a","costsRef","collection","get","then","docs","doc","where","snap","forEach","data","sum","console","SET_TOTAL_SUM","MutateTotalSum","totalSum","SetTotalSum","SET_INCOMES_PER_MONTH","MutateIncomesPerMonth","incomesPerMonth","SetIncomesPerMonth","SET_LOSSES_PER_MONTH","MutateLossesPerMonth","lossesPerMonth","SetLossesPerMonth","InitWallet","date","Date","Timestamp","fromDate","getFullYear","getMonth","costs","incomes","totalLossesPerMonth","reduce","totalIncomesPerMonth","DeleteCategory","batch","delete","ref","commit","SET_ENTITY","MutateEntity","entity","$merge","SetEntity","isShowing","isLoadingEntity","isLoadingCosts","MakeEmptyEntity","defaultState","SET_IS_SHOWING","MutateIsShowing","SetIsShowing","SET_COSTS","MutateCosts","SetCosts","SET_IS_LOADING_COSTS","MutateIsLoadingCosts","SetIsLoadingCosts","FetchCosts","categoryId","costsByCategory","mappedCostsByCategory","SET_IS_LOADING_ENTITY","MutateIsLoadingEntity","SetIsLoadingEntity","FetchEntity","getState","exists","capitalize","Init","Dispatcher","InitEditCategoryModal","connect","dispatcher","Portal","el","document","createElement","body","appendChild","this","removeChild","props","ReactDOM","createPortal","Component","Modal","onCancel","defaultProps","isOpen","AddCostsModal","init","setIsShowing","addCosts","onChangeEntity","Group","Input","value","placeholder","onChange","target","htmlFor","Select","disabled","AddCosts","addCostsModal","editCategoryModal","isShowingEditCategoryModal","set","AddCategoryModal","addCategory","AddCategory","addCategoryModal","toLowerCase","docId","Header","setIsShowingAddCostsModal","setIsShowingAddCategoryModal","setIsShowingAddIncomesModal","expand","dark","bg","sticky","Brand","href","Toggler","navbar","my","info","SetIsShowingAddCostsModal","SetIsShowingAddCategoryModal","SetIsShowingAddIncomesModal","formatter","Intl","NumberFormat","minimumFractionDigits","Wallet","onEditWallet","backgroundColor","marginLeft","format","SetIsShowingEditWalletModal","wallet","AddIncomesModal","addIncomes","AddIncomes","addIncomesModal","EditCategoryModal","editCategory","deleteCosts","useState","copiedEntity","setCopiedEntity","useCallback","obj","prevState","overflowY","height","Item","toDate","toLocaleDateString","color","DeleteCosts","costsId","EditCategory","entityObj","EditWalletModal","isLoadingIncomes","deleteIncomes","SET_INCOMES","MutateIncomes","SetIncomes","SET_IS_LOADING_INCOMES","MutateIsLoadingIncomes","SetIsLoadingIncomes","FetchIncomes","mappedIncomes","DeleteIncomes","incomesId","editWalletModal","Layout","Boolean","window","location","hostname","match","isLoadingCategories","reducer","initialState","loss","income","rootReducer","combineReducers","categoriesReducer","addCostsModalReducer","addCategoryModalReducer","addIncomesModalReducer","walletReducer","editCategoryModalReducer","editWalletModalReducer","store","createStore","applyMiddleware","thunk","String","prototype","charAt","slice","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fcbef81c.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\n\r\nconst Loader = ({\r\n  Spinner,\r\n}) => ({\r\n  classes,\r\n\r\n  children,\r\n\r\n  isLoading,\r\n}) => {\r\n\r\n  if (isLoading) {\r\n    return (\r\n        <div className={classes.loader}>\r\n          <Spinner/>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <Fragment>\r\n        {children}\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Loader;","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={'loader'}>\r\n      <div className={'lds-dual-ring'}/>\r\n    </div>\r\n);\r\n\r\nexport default Spinner;","import withStyles from 'react-jss';\r\nimport {compose} from 'redux';\r\nimport styles from './styles';\r\n\r\nimport Loader from './Loader';\r\nimport Spinner from '../spinner';\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n)(\r\n    Loader({\r\n      Spinner,\r\n    }),\r\n);\r\n\r\n","export default ({\r\n  loader: `\r\n    min-height: 200px;\r\n    position: relative;\r\n  `,\r\n});","import React, {useMemo} from 'react';\r\nimport {Card, Button} from 'bootstrap-4-react';\r\nimport {CloseCircleFilled, EditOutlined} from '@ant-design/icons';\r\n\r\nconst CategoryCard = (\r\n    {\r\n      title,\r\n      sumLimit,\r\n      costsSumPerMonth,\r\n\r\n      onDelete,\r\n      onEdit,\r\n    },\r\n) => {\r\n\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {\r\n              title?.toUpperCase()\r\n            }\r\n          </Card.Title>\r\n          <Card.Text text={'muted'}>\r\n            Траты за месяц: {costsSumPerMonth} ₽\r\n          </Card.Text>\r\n\r\n          {\r\n            sumLimit > 0 && (\r\n                <Card.Text text={'muted'}>\r\n                  Лимит на месяц: {sumLimit} ₽\r\n                </Card.Text>\r\n            )\r\n          }\r\n\r\n        </Card.Body>\r\n        <Card.Footer className={'d-flex justify-content-between'}>\r\n          <Button\r\n              success\r\n              mr={5}\r\n              onClick={onEdit}\r\n          >\r\n            <EditOutlined\r\n                style={iconStyle}\r\n            />\r\n            Редактировать\r\n          </Button>\r\n          <Button danger onClick={onDelete}>\r\n            <CloseCircleFilled\r\n                style={{\r\n                  ...iconStyle,\r\n                }}\r\n            />\r\n            Удалить\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;","import {compose} from 'redux';\r\nimport CategoryCard from './CategoryCard';\r\n\r\nexport default compose()(\r\n    CategoryCard,\r\n);","import React, {useEffect} from 'react';\r\nimport Loader from '../loader';\r\nimport CategoryCard from './components/categoryCard';\r\nimport {Card} from 'bootstrap-4-react';\r\n\r\nconst Categories = (\r\n    {\r\n      categories,\r\n      isLoading,\r\n\r\n      fetchCategories,\r\n      deleteCategory,\r\n      onEditCategory,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  return (\r\n      <Loader isLoading={isLoading}>\r\n        {\r\n          (() => {\r\n            let items = [];\r\n            return categories.map((item, index) => {\r\n              if (index % 2 === 0) {\r\n                items = [];\r\n              }\r\n              items.push((\r\n                  <CategoryCard\r\n                      key={item.id}\r\n                      title={item.title}\r\n                      sumLimit={item.sum_limit}\r\n                      costsSumPerMonth={item.costsSumPerMonth}\r\n                      onEdit={() => onEditCategory(item.id)}\r\n                      onDelete={() => deleteCategory(item.id)}\r\n                  />\r\n              ));\r\n\r\n              if (\r\n                  index > 0 && index % 2 !== 0\r\n                  || categories.length === index + 1\r\n              ) {\r\n                return (\r\n                    <Card.Deck\r\n                        mb={'3'}\r\n                        mt={'3'}\r\n                        key={index}\r\n                    >\r\n                      {[...items]}\r\n                    </Card.Deck>\r\n                );\r\n              }\r\n            });\r\n          })()\r\n        }\r\n      </Loader>\r\n  );\r\n};\r\n\r\nexport default Categories;","import * as firebase from 'firebase/app';\r\nimport 'firebase/analytics';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyD6NVbBtWaZm5P3j4ZHh1Bqs4TatJlYmS4',\r\n  authDomain: 'finance-app-6cdfc.firebaseapp.com',\r\n  databaseURL: 'https://finance-app-6cdfc.firebaseio.com',\r\n  projectId: 'finance-app-6cdfc',\r\n  storageBucket: 'finance-app-6cdfc.appspot.com',\r\n  messagingSenderId: '618921567953',\r\n  appId: '1:618921567953:web:5e0513acafd208704647f0',\r\n  measurementId: 'G-H2X987S04D',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;\r\n\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (loadingStatus) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: {\r\n    loadingStatus,\r\n  },\r\n});\r\n\r\nexport const MutateIsLoading = (state, {loadingStatus}) => update(state, {\r\n  isLoading: {$set: loadingStatus},\r\n});\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_CATEGORIES = Symbol('SET_CATEGORIES');\r\n\r\nexport const SetCategories = (categories) => ({\r\n  type: SET_CATEGORIES,\r\n  payload: categories,\r\n});\r\n\r\nexport const MutateCategories = (state, categories) => update(state, {\r\n  categories: {$set: categories},\r\n});\r\n\r\nexport default SetCategories;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetCategories from './setCategories';\r\nimport SetError from './setError';\r\n\r\nconst FetchCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n\r\n    const costsRef = firestore.collection('costs');\r\n    const categories = [];\r\n\r\n    await firestore.collection('categories').get().then(\r\n        async ({docs}) => {\r\n          for (const doc of docs) {\r\n            let costsSumPerMonth = 0;\r\n\r\n            await costsRef.where(\r\n                'categoryId',\r\n                '==',\r\n                firestore.doc(`categories/${doc.id}`),\r\n            ).get().then(snap => {\r\n              snap.docs.forEach(item => costsSumPerMonth += item.data().sum);\r\n            });\r\n\r\n            categories.push({\r\n              id: doc.id,\r\n              costsSumPerMonth,\r\n              ...doc.data(),\r\n            });\r\n          }\r\n        },\r\n    );\r\n\r\n    dispatch(SetCategories(categories));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default FetchCategories;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_TOTAL_SUM = Symbol('SET_TOTAL_SUM');\r\n\r\nexport const SetTotalSum = (totalSum) => ({\r\n  type: SET_TOTAL_SUM,\r\n  payload: totalSum,\r\n});\r\n\r\nexport const MutateTotalSum = (state, totalSum) => {\r\n  return update(state, {\r\n    totalSum: {$set: totalSum},\r\n  });\r\n};\r\n\r\nexport default SetTotalSum;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_INCOMES_PER_MONTH = Symbol('SET_INCOMES_PER_MONTH');\r\n\r\nexport const SetIncomesPerMonth = (incomesPerMonth) => ({\r\n  type: SET_INCOMES_PER_MONTH,\r\n  payload: incomesPerMonth,\r\n});\r\n\r\nexport const MutateIncomesPerMonth = (state, incomesPerMonth) => {\r\n  return update(state, {\r\n    incomesPerMonth: {$set: incomesPerMonth},\r\n  });\r\n};\r\n\r\nexport default SetIncomesPerMonth;","import update from 'immutability-helper';\r\n\r\nexport const SET_LOSSES_PER_MONTH = Symbol('SET_LOSSES_PER_MONTH');\r\n\r\nexport const SetLossesPerMonth = (lossesPerMonth) => ({\r\n  type: SET_LOSSES_PER_MONTH,\r\n  payload: lossesPerMonth,\r\n});\r\n\r\nexport const MutateLossesPerMonth = (state, lossesPerMonth) => {\r\n  return update(state, {\r\n    lossesPerMonth: {$set: lossesPerMonth},\r\n  });\r\n};\r\n\r\nexport default SetLossesPerMonth;","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetTotalSum from './setTotalSum';\r\nimport SetError from './setError';\r\nimport firebase from '../../../api';\r\nimport SetIncomesPerMonth from './setIncomesPerMonth';\r\nimport SetLossesPerMonth from './setLossesPerMonth';\r\n\r\nconst InitWallet = () => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n    const date = new Date();\r\n    const {\r\n      docs: costs,\r\n    } = await firestore.collection('costs').\r\n        where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n            new Date(date.getFullYear(), date.getMonth(), 1)),\r\n        ).where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n            new Date(date.getFullYear(), date.getMonth(), 31)),\r\n        ).get();\r\n    const {\r\n      docs: incomes,\r\n    } = await firestore.collection('incomes').\r\n        where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n            new Date(date.getFullYear(), date.getMonth(), 1)),\r\n        ).where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n            new Date(date.getFullYear(), date.getMonth(), 31)),\r\n        ).get();\r\n    const {\r\n      docs: allTimeIncomes,\r\n    } = await firestore.collection('incomes').get();\r\n    const totalLossesPerMonth = costs.reduce(\r\n        (sum, item) => sum + item.data().sum, 0,\r\n    );\r\n    const totalIncomesPerMonth = incomes.reduce(\r\n        (sum, item) => sum + item.data().sum, 0,\r\n    );\r\n    const totalSum = totalIncomesPerMonth - totalLossesPerMonth;\r\n\r\n    dispatch(SetLossesPerMonth(totalLossesPerMonth));\r\n    dispatch(SetIncomesPerMonth(totalIncomesPerMonth));\r\n    dispatch(SetTotalSum(totalSum));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('При загрузке данных произошла ошибка.'));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default InitWallet;","import {firestore} from 'Api';\r\nimport SetError from './setError';\r\nimport FetchCategories from './fetchCategories';\r\nimport InitWallet from '../../wallet/actions/init';\r\n\r\nconst DeleteCategory = (id) => async (dispatch) => {\r\n  try {\r\n    const batch = firestore.batch();\r\n\r\n    const costsRef = await firestore.collection('costs').where(\r\n        'categoryId',\r\n        '==',\r\n        firestore.doc(`categories/${id}`),\r\n    ).get();\r\n    costsRef.forEach(doc => {\r\n      batch.delete(doc.ref);\r\n    });\r\n\r\n    await firestore.collection('categories').doc(id).delete();\r\n    await batch.commit();\r\n\r\n    dispatch(InitWallet());\r\n    dispatch(FetchCategories());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка удаления категории'));\r\n  }\r\n};\r\n\r\nexport default DeleteCategory;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  isLoadingEntity: false,\r\n  isLoadingCosts: false,\r\n  error: null,\r\n  entity: {\r\n    id: '',\r\n    title: '',\r\n    sum_limit: 0,\r\n  },\r\n  costs: [],\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import update from 'immutability-helper';\r\n\r\nexport const SET_COSTS = Symbol('SET_COSTS');\r\n\r\nexport const SetCosts = (costs) => ({\r\n  type: SET_COSTS,\r\n  payload: costs,\r\n});\r\n\r\nexport const MutateCosts = (state, costs) => {\r\n  return update(state, {\r\n    costs: {$set: costs},\r\n  });\r\n};\r\n\r\nexport default SetCosts;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING_COSTS = Symbol('SET_IS_LOADING_COSTS');\r\n\r\nexport const SetIsLoadingCosts = (isLoadingCosts) => ({\r\n  type: SET_IS_LOADING_COSTS,\r\n  payload: isLoadingCosts,\r\n});\r\n\r\nexport const MutateIsLoadingCosts = (state, isLoadingCosts) => {\r\n  return update(state, {\r\n    isLoadingCosts: {$set: isLoadingCosts},\r\n  });\r\n};\r\n\r\nexport default SetIsLoadingCosts;","import firebase, {firestore} from 'Api';\r\nimport SetError from './setError';\r\nimport SetCosts from './setCosts';\r\nimport SetIsLoadingCosts from './setIsLoadingCosts';\r\n\r\nconst FetchCosts = (categoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsLoadingCosts(true));\r\n    const date = new Date();\r\n\r\n    const {\r\n      docs: costsByCategory,\r\n    } = await firestore.collection('costs').where(\r\n        'categoryId',\r\n        '==',\r\n        firestore.doc(`categories/${categoryId}`),\r\n    ).where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 1)),\r\n    ).where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n        new Date(date.getFullYear(), date.getMonth(), 31)),\r\n    ).get();\r\n\r\n    const mappedCostsByCategory = costsByCategory.map(item => ({\r\n      id: item.id,\r\n      ...item.data(),\r\n    }));\r\n\r\n    dispatch(SetCosts(mappedCostsByCategory));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoadingCosts(false));\r\n  }\r\n};\r\n\r\nexport default FetchCosts;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING_ENTITY = Symbol('SET_IS_LOADING_ENTITY');\r\n\r\nexport const SetIsLoadingEntity = (isLoadingEntity) => ({\r\n  type: SET_IS_LOADING_ENTITY,\r\n  payload: isLoadingEntity\r\n});\r\n\r\nexport const MutateIsLoadingEntity = (state, isLoadingEntity) => {\r\n  return update(state, {\r\n    isLoadingEntity: {$set: isLoadingEntity},\r\n  });\r\n}\r\n\r\nexport default SetIsLoadingEntity;","import {firestore} from 'Api';\r\nimport SetIsLoadingEntity from './setIsLoadingEntity';\r\nimport SetError from './setError';\r\nimport SetEntity from './setEntity';\r\n\r\nconst FetchEntity = (categoryId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoadingEntity(true));\r\n\r\n    const doc = await firestore.collection('categories').doc(categoryId).get();\r\n    if (!doc.exists) {\r\n      dispatch(SetError('Произошла ошибка. Такой категории не найдено.'));\r\n      return;\r\n    }\r\n\r\n    dispatch(SetEntity({\r\n      id: doc.id,\r\n      title: doc.data().title.capitalize(),\r\n      ...doc.data(),\r\n    }));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoadingEntity(false));\r\n  }\r\n};\r\n\r\nexport default FetchEntity;","import MakeEmptyEntity from './makeEmptyEntity';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport FetchCosts from './fetchCosts';\r\nimport FetchEntity from './fetchEntity';\r\n\r\nconst Init = (categoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsShowing());\r\n    dispatch(MakeEmptyEntity());\r\n    await dispatch(FetchEntity(categoryId));\r\n    await dispatch(FetchCosts(categoryId));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(\r\n        SetError('Ошибка при загрузке данных для редактирования сущнности'),\r\n    );\r\n  }\r\n};\r\n\r\nexport default Init;\r\n","import FetchCategories from './actions/fetchCategories';\r\nimport DeleteCategory from './actions/deleteCategory';\r\nimport InitEditCategoryModal from '../editCategoryModal/actions/init';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  fetchCategories: () => dispatch(FetchCategories()),\r\n  deleteCategory: (id) => dispatch(DeleteCategory(id)),\r\n  onEditCategory: (id) => dispatch(InitEditCategoryModal(id)),\r\n});\r\n\r\nexport default Dispatcher;","import Categories from './Categories';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(Categories);","export default (\r\n    {\r\n      categories: {\r\n        isLoading,\r\n        categories,\r\n        error,\r\n      },\r\n    },\r\n) => ({\r\n  isLoading,\r\n  categories,\r\n  error,\r\n});","import Portal from './Portal';\r\n\r\nexport default Portal;","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends Component {\r\n\r\n  el = document.createElement('div');\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const {children} = this.props;\r\n\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default Portal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Portal from '../portal';\r\n\r\nimport './styles.css';\r\n\r\nconst Modal = (\r\n    {\r\n      onCancel,\r\n      children,\r\n      isShowing,\r\n    },\r\n) => {\r\n\r\n  return (\r\n      <>\r\n        {\r\n          isShowing && (\r\n              <Portal>\r\n                <div\r\n                    className=\"modalOverlay\"\r\n                    onClick={onCancel}\r\n                />\r\n                <div className=\"modalWindow\">\r\n                  {children}\r\n                </div>\r\n              </Portal>\r\n          )\r\n        }\r\n      </>\r\n  );\r\n};\r\nModal.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\nModal.defaultProps = {\r\n  isOpen: false,\r\n  children: null,\r\n};\r\nexport default Modal;","import Modal from './Modal';\r\n\r\nexport default Modal;","import React, {useEffect} from 'react';\r\nimport Modal from '../modal';\r\nimport {Button, Form, Card, Alert} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\n\r\nconst AddCostsModal = (\r\n    {\r\n      isShowing,\r\n      categories,\r\n      isLoading,\r\n      error,\r\n      entity: {\r\n        sum,\r\n        categoryId,\r\n      },\r\n\r\n      init,\r\n      setIsShowing,\r\n      addCosts,\r\n      onChangeEntity,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing]);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Card.Title>\r\n                Добавить трату\r\n              </Card.Title>\r\n              <Form>\r\n                <Form.Group>\r\n                  <label>Сумма</label>\r\n                  <Form.Input\r\n                      value={sum}\r\n                      type=\"number\"\r\n                      placeholder=\"Введите сумму\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          sum: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n                {\r\n                  categories.length > 0 ? (\r\n                      <Form.Group>\r\n                        <label htmlFor=\"exampleControlsInput1\">\r\n                          Категория\r\n                        </label>\r\n                        <Form.Select\r\n                            value={categoryId}\r\n                            onChange={({target: {value}}) => onChangeEntity({\r\n                              categoryId: value,\r\n                            })}>\r\n                          <option value={''}>\r\n                            Выберите\r\n                          </option>\r\n                          {\r\n                            categories.map(item => {\r\n                              return (\r\n                                  <option\r\n                                      key={item.id}\r\n                                      value={item.id}\r\n                                  >\r\n                                    {\r\n                                      item.data().title.capitalize()\r\n                                    }\r\n                                  </option>\r\n                              );\r\n                            })\r\n                          }\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                  ) : (\r\n                      <Alert danger>\r\n                        Сначала создайте категорию\r\n                      </Alert>\r\n                  )\r\n                }\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button\r\n                  disabled={categories?.length <= 0}\r\n                  onClick={categories?.length && addCosts}\r\n                  success\r\n              >\r\n                Добавить трату\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Loader>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default AddCostsModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_CATEGORIES = Symbol('SET_CATEGORIES');\r\n\r\nexport const SetCategories = (categories) => ({\r\n  type: SET_CATEGORIES,\r\n  payload: categories,\r\n});\r\n\r\nexport const MutateCategories = (state, categories) => {\r\n  return update(state, {\r\n    categories: {$set: categories},\r\n  });\r\n};\r\n\r\nexport default SetCategories;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  categories: [],\r\n  isLoading: true,\r\n  error: null,\r\n  entity: {\r\n    sum: '',\r\n    categoryId: '',\r\n  },\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetCategories from './setCategories';\r\nimport SetError from './setError';\r\nimport MakeEmptyEntity from './makeEmptyEntity';\r\n\r\nconst Init = () => async (dispatch) => {\r\n  try {\r\n    dispatch(MakeEmptyEntity());\r\n    dispatch(SetIsLoading(true));\r\n    const {\r\n      docs: categories,\r\n    } = await firestore.collection('categories').get();\r\n\r\n    dispatch(SetCategories(categories));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        `\r\n          Ошибка сервера.\r\n          Обратитесь к администратору или попробуйте обновить страницу.\r\n        `,\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default Init;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\nimport firebase from '../../../api';\r\nimport InitWallet from '../../wallet/actions/init';\r\nimport FetchCosts from '../../editCategoryModal/actions/fetchCosts';\r\n\r\nconst AddCosts = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n    const {\r\n      addCostsModal: {\r\n        entity: {\r\n          sum,\r\n          categoryId,\r\n        },\r\n      },\r\n      editCategoryModal: {\r\n        isShowing: isShowingEditCategoryModal,\r\n        entity: {\r\n          id,\r\n        },\r\n      },\r\n    } = getState();\r\n\r\n    if ((+sum !== 0 && !+sum) || !categoryId) {\r\n      dispatch(SetError(\r\n          'Некоректно заполнены поля',\r\n      ));\r\n      return;\r\n    }\r\n\r\n    await firestore.collection('costs').doc().set({\r\n      date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n      sum: +sum,\r\n      categoryId: firestore.doc(`categories/${categoryId}`),\r\n    });\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(InitWallet());\r\n    dispatch(SetIsLoading(false));\r\n    dispatch(SetIsShowing());\r\n    if (isShowingEditCategoryModal && id) {\r\n      dispatch(FetchCosts(id));\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка добавления траты',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default AddCosts;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport AddCosts from './actions/addCosts';\r\nimport SetEntity from './actions/setEntity';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  addCosts: () => dispatch(AddCosts()),\r\n  init: () => dispatch(Init()),\r\n  onChangeEntity: (data) => dispatch(SetEntity(data)),\r\n});\r\n\r\nexport default Dispatcher;","import AddCostsModal from './AddCostsModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(AddCostsModal);","export default (\r\n    {\r\n      addCostsModal: {\r\n        isShowing,\r\n        categories,\r\n        isLoading,\r\n        error,\r\n        entity,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  categories,\r\n  isLoading,\r\n  error,\r\n  entity,\r\n});","import React, {useEffect} from 'react';\r\nimport Modal from '../modal';\r\nimport {Button, Form, Card, Alert} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\n\r\nconst AddCategoryModal = (\r\n    {\r\n      isShowing,\r\n      isLoading,\r\n      entity: {\r\n        title,\r\n        sum_limit: sumLimit,\r\n      },\r\n      error,\r\n\r\n      setIsShowing,\r\n      onChangeEntity,\r\n      addCategory,\r\n      init,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing, init]);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Card.Title>\r\n                Добавить категорию\r\n              </Card.Title>\r\n              <Form>\r\n                <Form.Group>\r\n                  <label>Название категории</label>\r\n                  <Form.Input\r\n                      value={title}\r\n                      type=\"text\"\r\n                      placeholder=\"Введите название категории\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          title: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <label>Лимит трат</label>\r\n                  <Form.Input\r\n                      value={sumLimit}\r\n                      type=\"number\"\r\n                      placeholder=\"Введите лимит трат\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          sum_limit: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button\r\n                  onClick={addCategory}\r\n                  success\r\n              >\r\n                Добавить категорию\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Loader>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default AddCategoryModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\nimport {transform} from 'cyrillic-to-translit-js';\r\n\r\nconst AddCategory = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n\r\n    const {\r\n      addCategoryModal: {\r\n        entity,\r\n      },\r\n    } = getState();\r\n    const {sum_limit, title} = entity;\r\n    if ((!title && title.length < 5) || (sum_limit !== 0 && !sum_limit)) {\r\n      dispatch(SetError(\r\n          `\r\n          Неккоректно заполнены поля.\r\n          Название должно быть больше 5 символов.\r\n          `,\r\n      ));\r\n      return;\r\n    }\r\n    await firestore.collection('categories').doc().set({\r\n      title: title.toLowerCase(),\r\n      sum_limit,\r\n    });\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(SetIsLoading(false));\r\n    dispatch(SetIsShowing());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Неккоректно заполнены поля',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default AddCategory;\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  error: null,\r\n  entity: {\r\n    title: '',\r\n    sum_limit: '',\r\n  },\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport AddCategory from './actions/addCategory';\r\nimport SetEntity from './actions/setEntity';\r\nimport MakeEmptyEntity from './actions/makeEmptyEntity';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  addCategory: (docId, data) => dispatch(AddCategory(docId, data)),\r\n  onChangeEntity: (data) => dispatch(SetEntity(data)),\r\n  init: () => dispatch(MakeEmptyEntity()),\r\n});\r\n\r\nexport default Dispatcher;","import AddCategoryModal from './AddCategoryModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(AddCategoryModal);","export default (\r\n    {\r\n      addCategoryModal: {\r\n        isShowing,\r\n        entity,\r\n        error,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  entity,\r\n  error,\r\n});","import React from 'react';\r\nimport {BDiv, Button, Collapse, Navbar} from 'bootstrap-4-react';\r\n\r\nconst Header = (\r\n    {\r\n      setIsShowingAddCostsModal,\r\n      setIsShowingAddCategoryModal,\r\n      setIsShowingAddIncomesModal,\r\n    },\r\n) => {\r\n  return (\r\n      <Navbar expand=\"lg\" dark bg=\"dark\" mb=\"3\" sticky=\"top\">\r\n        <Navbar.Brand href=\"#\">\r\n          Финансы\r\n        </Navbar.Brand>\r\n        <Navbar.Toggler target={'#navbar'}/>\r\n        <Collapse navbar id={'navbar'} justifyContent=\"end\">\r\n          <BDiv my=\"2 lg-0\">\r\n            <Button\r\n                success\r\n                mr={2}\r\n                mt={2}\r\n                onClick={setIsShowingAddCategoryModal}\r\n            >\r\n              Добавить категорию\r\n            </Button>\r\n            <Button\r\n                success\r\n                mr={2}\r\n                mt={2}\r\n                onClick={setIsShowingAddIncomesModal}\r\n            >\r\n              Добавить доход\r\n            </Button>\r\n            <Button\r\n                info\r\n                mr={2}\r\n                mt={2}\r\n                onClick={setIsShowingAddCostsModal}\r\n            >\r\n              Добавить трату\r\n            </Button>\r\n          </BDiv>\r\n        </Collapse>\r\n      </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import SetIsShowingAddCostsModal from '../addCostsModal/actions/setIsShowing';\r\nimport SetIsShowingAddCategoryModal\r\n  from '../addCategoryModal/actions/setIsShowing';\r\nimport SetIsShowingAddIncomesModal\r\n  from '../addIncomesModal/actions/setIsShowing';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowingAddCostsModal: () => dispatch(SetIsShowingAddCostsModal()),\r\n  setIsShowingAddCategoryModal: () => dispatch(SetIsShowingAddCategoryModal()),\r\n  setIsShowingAddIncomesModal: () => dispatch(SetIsShowingAddIncomesModal()),\r\n});\r\n\r\nexport default Dispatcher;","import Header from './Header';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport dispatcher from './dispatcher'\r\n\r\nexport default compose(\r\n    connect(null, dispatcher)\r\n)(Header);","export const formatter = new Intl.NumberFormat('ru-RU', {\r\n  minimumFractionDigits: 0,\r\n});","import React, {useEffect, useMemo} from 'react';\r\nimport Loader from '../loader';\r\nimport {formatter} from '../../helpers';\r\nimport {EditOutlined} from '@ant-design/icons';\r\nimport {Button} from 'bootstrap-4-react';\r\n\r\nconst Wallet = (\r\n    {\r\n      lossesPerMonth,\r\n      incomesPerMonth,\r\n      totalSum,\r\n      isLoading,\r\n\r\n      init,\r\n      onEditWallet,\r\n    },\r\n) => {\r\n\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  return (\r\n      <Loader isLoading={isLoading}>\r\n        <h1>Кошелек:\r\n          <EditOutlined\r\n              style={{\r\n                ...iconStyle,\r\n                backgroundColor: '#eee',\r\n                padding: 10,\r\n                marginLeft: 5,\r\n                fontSize: 25,\r\n              }}\r\n              onClick={onEditWallet}\r\n          /></h1>\r\n        <h5>\r\n          Общая сумма:&nbsp;{formatter.format(totalSum)}&nbsp;₽\r\n        </h5>\r\n        <h5>\r\n          Траты за месяц:&nbsp;{formatter.format(lossesPerMonth)}&nbsp;₽\r\n        </h5>\r\n        <h5>\r\n          Доходы за месяц:&nbsp;{formatter.format(incomesPerMonth)}&nbsp;₽\r\n        </h5>\r\n      </Loader>\r\n  );\r\n};\r\n\r\nexport default Wallet;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_SHOWING = Symbol('SET_IS_SHOWING');\r\n\r\nexport const SetIsShowing = () => ({\r\n  type: SET_IS_SHOWING,\r\n  payload: null,\r\n});\r\n\r\nexport const MutateIsShowing = (state) => {\r\n  return update(state, {\r\n    isShowing: {$set: !state.isShowing},\r\n  });\r\n};\r\n\r\nexport default SetIsShowing;","import Init from './actions/init';\r\nimport SetIsShowingEditWalletModal from '../editWalletModal/actions/setIsShowing';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  init: () => dispatch(Init()),\r\n  onEditWallet: () => dispatch(SetIsShowingEditWalletModal()),\r\n});\r\n\r\nexport default Dispatcher;","import Wallet from './Wallet';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(Wallet);","export default (\r\n    {\r\n      wallet: {\r\n        lossesPerMonth,\r\n        incomesPerMonth,\r\n        totalSum,\r\n        isLoading,\r\n      },\r\n    },\r\n) => ({\r\n  lossesPerMonth,\r\n  incomesPerMonth,\r\n  totalSum,\r\n  isLoading,\r\n});","import React, {useEffect} from 'react';\r\nimport Modal from '../modal';\r\nimport {Button, Form, Card, Alert} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\n\r\nconst AddIncomesModal = (\r\n    {\r\n      isShowing,\r\n      isLoading,\r\n      error,\r\n      entity: {\r\n        sum,\r\n      },\r\n\r\n      init,\r\n      setIsShowing,\r\n      addIncomes,\r\n      onChangeEntity,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing]);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Card.Title>\r\n                Добавить доход\r\n              </Card.Title>\r\n              <Form>\r\n                <Form.Group>\r\n                  <label>Сумма</label>\r\n                  <Form.Input\r\n                      value={sum}\r\n                      type=\"number\"\r\n                      placeholder=\"Введите сумму\"\r\n                      onChange={\r\n                        ({target: {value}}) => onChangeEntity({\r\n                          sum: value,\r\n                        })\r\n                      }\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button\r\n                  onClick={addIncomes}\r\n                  success\r\n              >\r\n                Добавить доход\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Loader>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default AddIncomesModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_ENTITY = Symbol('SET_ENTITY');\r\n\r\nexport const SetEntity = (data) => ({\r\n  type: SET_ENTITY,\r\n  payload: data,\r\n});\r\n\r\nexport const MutateEntity = (state, data) => {\r\n  return update(state, {\r\n    entity: {$merge: {...data}},\r\n  });\r\n};\r\n\r\nexport default SetEntity; ","export default ({\r\n  isShowing: false,\r\n  isLoading: true,\r\n  error: null,\r\n  entity: {\r\n    sum: '',\r\n  },\r\n});","import SetError from './setError';\r\nimport SetEntity from './setEntity';\r\nimport defaultState from '../defaultState';\r\n\r\nconst MakeEmptyEntity = () => async (dispatch) => {\r\n  dispatch(SetError(null));\r\n  dispatch(SetEntity(defaultState.entity));\r\n};\r\n\r\nexport default MakeEmptyEntity;\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (isLoading) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: isLoading\r\n});\r\n\r\nexport const MutateIsLoading = (state, isLoading) => {\r\n  return update(state, {\r\n    isLoading: {$set: isLoading},\r\n  });\r\n}\r\n\r\nexport default SetIsLoading; ","import MakeEmptyEntity from './makeEmptyEntity';\r\nimport SetIsLoading from './setIsLoading';\r\n\r\nconst Init = () => async (dispatch) => {\r\n  dispatch(SetIsLoading(false));\r\n  dispatch(MakeEmptyEntity());\r\n};\r\n\r\nexport default Init;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetError from './setError';\r\nimport SetIsShowing from './setIsShowing';\r\nimport firebase from '../../../api';\r\nimport InitWallet from '../../wallet/actions/init';\r\n\r\nconst AddIncomes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n    const {\r\n      addIncomesModal: {\r\n        entity: {\r\n          sum,\r\n        },\r\n      },\r\n    } = getState();\r\n\r\n    if (!+sum) {\r\n      dispatch(SetError(\r\n          'Некоректно заполнены поля',\r\n      ));\r\n      return;\r\n    }\r\n\r\n    await firestore.collection('incomes').doc().set({\r\n      date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n      sum: +sum,\r\n    });\r\n\r\n    dispatch(InitWallet());\r\n    dispatch(SetIsLoading(false));\r\n    dispatch(SetIsShowing());\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка добавления траты',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default AddIncomes;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport AddIncomes from './actions/addIncomes';\r\nimport SetEntity from './actions/setEntity';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  addIncomes: () => dispatch(AddIncomes()),\r\n  init: () => dispatch(Init()),\r\n  onChangeEntity: (data) => dispatch(SetEntity(data)),\r\n});\r\n\r\nexport default Dispatcher;","import AddIncomesModal from './AddIncomesModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(AddIncomesModal);","export default (\r\n    {\r\n      addIncomesModal: {\r\n        isShowing,\r\n        isLoading,\r\n        error,\r\n        entity,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  isLoading,\r\n  error,\r\n  entity,\r\n});","import React, {\r\n  Fragment,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Modal from '../modal';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Card,\r\n  Alert,\r\n  ListGroup,\r\n  Badge,\r\n  Lead,\r\n} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\nimport {CloseCircleFilled} from '@ant-design/icons';\r\nimport {formatter} from '../../helpers';\r\n\r\nconst EditCategoryModal = (\r\n    {\r\n      isShowing,\r\n      isLoadingEntity,\r\n      isLoadingCosts,\r\n      entity,\r\n      error,\r\n      costs,\r\n\r\n      setIsShowing,\r\n      editCategory,\r\n      deleteCosts,\r\n    },\r\n) => {\r\n  const [copiedEntity, setCopiedEntity] = useState(entity);\r\n  useEffect(() => {\r\n    setCopiedEntity(entity);\r\n  }, [entity]);\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  const onChangeEntity = useCallback((obj) => {\r\n    setCopiedEntity(prevState => ({...prevState, ...obj}));\r\n  }, []);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Fragment>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <Loader isLoading={isLoadingEntity}>\r\n                <Card.Title>\r\n                  Изменение категории \"{entity.title}\"\r\n                </Card.Title>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <label>Название категории</label>\r\n                    <Form.Input\r\n                        value={copiedEntity.title}\r\n                        type=\"text\"\r\n                        placeholder=\"Введите название категории\"\r\n                        onChange={\r\n                          ({target: {value}}) => onChangeEntity({\r\n                            title: value,\r\n                          })\r\n                        }\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label>Лимит трат</label>\r\n                    <Form.Input\r\n                        value={copiedEntity.sum_limit}\r\n                        type=\"number\"\r\n                        placeholder=\"Введите лимит трат\"\r\n                        onChange={\r\n                          ({target: {value}}) => onChangeEntity({\r\n                            sum_limit: value,\r\n                          })\r\n                        }\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Loader>\r\n\r\n              <Loader isLoading={isLoadingCosts}>\r\n                {\r\n                  costs.length > 0 && (\r\n                      <ListGroup\r\n                          style={{\r\n                            overflowY: 'scroll',\r\n                            height: 250,\r\n                            padding: 10,\r\n                          }}\r\n                      >\r\n                        {\r\n                          costs.map(item => {\r\n                            return (\r\n                                <ListGroup.Item\r\n                                    key={item.id}\r\n                                    display=\"flex\"\r\n                                    justifyContent=\"between\"\r\n                                    mb={2}\r\n                                >\r\n                                  <div>\r\n                                    <Lead>\r\n                                      Сумма:&nbsp;{\r\n                                      formatter.format(\r\n                                          item.sum,\r\n                                      )\r\n                                    }&nbsp;₽\r\n                                    </Lead>\r\n                                    <Lead>\r\n                                      Дата:&nbsp;\r\n                                      {\r\n                                        item.date.toDate().\r\n                                            toLocaleDateString('ru-RU')\r\n                                      }\r\n                                    </Lead>\r\n                                  </div>\r\n\r\n                                  <CloseCircleFilled\r\n                                      style={{\r\n                                        ...iconStyle,\r\n                                        fontSize: 30,\r\n                                        color: 'red',\r\n                                      }}\r\n                                      onClick={() => deleteCosts(item.id)}\r\n                                  />\r\n                                </ListGroup.Item>\r\n                            );\r\n                          })\r\n                        }\r\n                      </ListGroup>\r\n                  )\r\n                }\r\n\r\n              </Loader>\r\n            </Card.Body>\r\n\r\n            <Card.Footer>\r\n              <Button\r\n                  onClick={() => editCategory(copiedEntity)}\r\n                  success\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Fragment>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default EditCategoryModal;","import {firestore} from 'Api';\r\nimport SetIsLoadingEntity from './setIsLoadingEntity';\r\nimport SetError from './setError';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\nimport InitWallet from '../../wallet/actions/init';\r\nimport FetchCosts from './fetchCosts';\r\n\r\nconst DeleteCosts = (costsId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      editCategoryModal: {\r\n        entity: {\r\n          id,\r\n        },\r\n      },\r\n    } = getState();\r\n    dispatch(SetIsLoadingEntity(true));\r\n\r\n    await firestore.collection('costs').doc(costsId).delete();\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(InitWallet());\r\n    dispatch(FetchCosts(id));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка удаления траты',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoadingEntity(false));\r\n  }\r\n};\r\n\r\nexport default DeleteCosts;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoadingEntity from './setIsLoadingEntity';\r\nimport SetError from './setError';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\n\r\nconst EditCategory = (entityObj) => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsLoadingEntity(true));\r\n\r\n    const {id, sum_limit, title} = entityObj;\r\n    if ((!title && title.length < 5) || (sum_limit !== 0 && !sum_limit)) {\r\n      dispatch(SetError(\r\n          `\r\n          Неккоректно заполнены поля.\r\n          Название должно быть больше 5 символов.\r\n          `,\r\n      ));\r\n      return;\r\n    }\r\n    await firestore.collection('categories').doc(id).set({\r\n      title: title.toLowerCase(),\r\n      sum_limit,\r\n    });\r\n\r\n    dispatch(FetchCategories());\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Неккоректно заполнены поля',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoadingEntity(false));\r\n  }\r\n};\r\n\r\nexport default EditCategory;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport DeleteCosts from './actions/deleteCosts';\r\nimport EditCategory from './actions/editCategory';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  editCategory: (entityObj) => dispatch(EditCategory(entityObj)),\r\n  deleteCosts: (costsId) => dispatch(DeleteCosts(costsId)),\r\n  init: () => dispatch(Init()),\r\n});\r\n\r\nexport default Dispatcher;","import EditCategoryModal from './EditCategoryModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(EditCategoryModal);","export default (\r\n    {\r\n      editCategoryModal: {\r\n        isShowing,\r\n        entity,\r\n        error,\r\n        isLoadingEntity,\r\n        isLoadingCosts,\r\n        costs,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  entity,\r\n  error,\r\n  isLoadingEntity,\r\n  isLoadingCosts,\r\n  costs,\r\n});","import React, {\r\n  Fragment,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport Modal from '../modal';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Card,\r\n  Alert,\r\n  ListGroup,\r\n  Badge,\r\n  Lead,\r\n} from 'bootstrap-4-react';\r\nimport Loader from '../loader';\r\nimport {CloseCircleFilled} from '@ant-design/icons';\r\nimport {formatter} from '../../helpers';\r\n\r\nconst EditWalletModal = (\r\n    {\r\n      isShowing,\r\n      isLoadingIncomes,\r\n      error,\r\n      incomes,\r\n\r\n      setIsShowing,\r\n      deleteIncomes,\r\n      init,\r\n    },\r\n) => {\r\n  useEffect(() => {\r\n    if (isShowing) {\r\n      init();\r\n    }\r\n  }, [isShowing, init]);\r\n\r\n  const iconStyle = useMemo(() => ({\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    fontSize: 15,\r\n  }), []);\r\n\r\n  return (\r\n      <Modal\r\n          isShowing={isShowing}\r\n          onCancel={setIsShowing}\r\n      >\r\n        <Fragment>\r\n          <Card>\r\n            <Card.Body>\r\n              {\r\n                error && (\r\n                    <Alert danger>\r\n                      {error}\r\n                    </Alert>\r\n                )\r\n              }\r\n              <h4>\r\n                Доходы за месяц\r\n              </h4>\r\n              <Loader isLoading={isLoadingIncomes}>\r\n                {\r\n                  incomes.length > 0 ? (\r\n                      <ListGroup\r\n                          style={{\r\n                            overflowY: 'scroll',\r\n                            height: 250,\r\n                            padding: 10,\r\n                          }}\r\n                      >\r\n                        {\r\n                          incomes.map(item => {\r\n                            return (\r\n                                <ListGroup.Item\r\n                                    key={item.id}\r\n                                    display=\"flex\"\r\n                                    justifyContent=\"between\"\r\n                                    mb={2}\r\n                                >\r\n                                  <div>\r\n                                    <Lead>\r\n                                      Сумма:&nbsp;{\r\n                                      formatter.format(\r\n                                          item.sum,\r\n                                      )\r\n                                    }&nbsp;₽\r\n                                    </Lead>\r\n                                    <Lead>\r\n                                      Дата:&nbsp;\r\n                                      {\r\n                                        item.date.toDate().\r\n                                            toLocaleDateString('ru-RU')\r\n                                      }\r\n                                    </Lead>\r\n                                  </div>\r\n\r\n                                  <CloseCircleFilled\r\n                                      style={{\r\n                                        ...iconStyle,\r\n                                        fontSize: 30,\r\n                                        color: 'red',\r\n                                      }}\r\n                                      onClick={() => deleteIncomes(item.id)}\r\n                                  />\r\n                                </ListGroup.Item>\r\n                            );\r\n                          })\r\n                        }\r\n                      </ListGroup>\r\n                  ) : (\r\n                      <Lead>\r\n                        Ничего не найдено\r\n                      </Lead>\r\n                  )\r\n                }\r\n\r\n              </Loader>\r\n            </Card.Body>\r\n          </Card>\r\n        </Fragment>\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default EditWalletModal;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import update from 'immutability-helper';\r\n\r\nexport const SET_INCOMES = Symbol('SET_INCOMES');\r\n\r\nexport const SetIncomes = (incomes) => ({\r\n  type: SET_INCOMES,\r\n  payload: incomes,\r\n});\r\n\r\nexport const MutateIncomes = (state, incomes) => {\r\n  return update(state, {\r\n    incomes: {$set: incomes},\r\n  });\r\n};\r\n\r\nexport default SetIncomes;","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING_INCOMES = Symbol('SET_IS_LOADING_INCOMES');\r\n\r\nexport const SetIsLoadingIncomes = (isLoadingIncomes) => ({\r\n  type: SET_IS_LOADING_INCOMES,\r\n  payload: isLoadingIncomes,\r\n});\r\n\r\nexport const MutateIsLoadingIncomes = (state, isLoadingIncomes) => {\r\n  return update(state, {\r\n    isLoadingIncomes: {$set: isLoadingIncomes},\r\n  });\r\n};\r\n\r\nexport default SetIsLoadingIncomes;","import firebase, {firestore} from 'Api';\r\nimport SetError from './setError';\r\nimport SetIncomes from './setIncomes';\r\nimport SetIsLoadingIncomes from './setIsLoadingIncomes';\r\n\r\nconst FetchIncomes = () => async (dispatch) => {\r\n  try {\r\n    dispatch(SetIsLoadingIncomes(true));\r\n    const date = new Date();\r\n\r\n    const {\r\n      docs: incomes,\r\n    } = await firestore.collection('incomes').\r\n        where('date', '>=', firebase.firestore.Timestamp.fromDate(\r\n            new Date(date.getFullYear(), date.getMonth(), 1)),\r\n        ).\r\n        where('date', '<=', firebase.firestore.Timestamp.fromDate(\r\n            new Date(date.getFullYear(), date.getMonth(), 31)),\r\n        ).\r\n        get();\r\n\r\n    const mappedIncomes = incomes.map(item => ({\r\n      id: item.id,\r\n      ...item.data(),\r\n    }));\r\n\r\n    dispatch(SetIncomes(mappedIncomes));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoadingIncomes(false));\r\n  }\r\n};\r\n\r\nexport default FetchIncomes;","import SetError from './setError';\r\nimport FetchIncomes from './fetchIncomes';\r\nimport SetIsLoadingIncomes from './setIsLoadingIncomes';\r\n\r\nconst Init = () => async (dispatch) => {\r\n  try {\r\n    await dispatch(FetchIncomes());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(\r\n        SetError('Ошибка при загрузке данных для редактирования сущнности'),\r\n    );\r\n  } finally {\r\n    dispatch(SetIsLoadingIncomes(false));\r\n  }\r\n};\r\n\r\nexport default Init;\r\n","import {firestore} from 'Api';\r\nimport SetIsLoadingIncomes from './setIsLoadingIncomes';\r\nimport SetError from './setError';\r\nimport FetchCategories from '../../categories/actions/fetchCategories';\r\nimport InitWallet from '../../wallet/actions/init';\r\nimport FetchIncomes from './fetchIncomes';\r\n\r\nconst DeleteIncomes = (incomesId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoadingIncomes(true));\r\n\r\n    await firestore.collection('incomes').doc(incomesId).delete();\r\n\r\n    dispatch(FetchCategories());\r\n    dispatch(InitWallet());\r\n    dispatch(FetchIncomes());\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError(\r\n        'Ошибка удаления доходов',\r\n    ));\r\n  } finally {\r\n    dispatch(SetIsLoadingIncomes(false));\r\n  }\r\n};\r\n\r\nexport default DeleteIncomes;\r\n","import SetIsShowing from './actions/setIsShowing';\r\nimport Init from './actions/init';\r\nimport DeleteIncomes from './actions/deleteIncomes';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  setIsShowing: () => dispatch(SetIsShowing()),\r\n  deleteIncomes: (costsId) => dispatch(DeleteIncomes(costsId)),\r\n  init: () => dispatch(Init()),\r\n});\r\n\r\nexport default Dispatcher;","import EditWalletModal from './EditWalletModal';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(EditWalletModal);","export default (\r\n    {\r\n      editWalletModal: {\r\n        isShowing,\r\n        error,\r\n        isLoadingIncomes,\r\n        incomes,\r\n      },\r\n    },\r\n) => ({\r\n  isShowing,\r\n  error,\r\n  isLoadingIncomes,\r\n  incomes,\r\n});","import Layout from './Layout';\r\n\r\nexport default Layout;","import React, {Fragment} from 'react';\r\nimport Categories from '../categories';\r\nimport {Container} from 'bootstrap-4-react';\r\nimport AddCostsModal from '../addCostsModal';\r\nimport AddCategoryModal from '../addCategoryModal';\r\nimport Header from '../header';\r\nimport Wallet from '../wallet';\r\nimport AddIncomesModal from '../addIncomesModal';\r\nimport EditCategoryModal from '../editCategoryModal';\r\nimport EditWalletModal from '../editWalletModal';\r\n\r\nconst Layout = () => {\r\n\r\n  return (\r\n      <Fragment>\r\n\r\n        <AddCostsModal/>\r\n        <AddCategoryModal/>\r\n        <AddIncomesModal/>\r\n        <EditCategoryModal/>\r\n        <EditWalletModal/>\r\n\r\n        <Header/>\r\n        <Container>\r\n          <Wallet/>\r\n          <Categories/>\r\n        </Container>\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n  categories: [],\r\n  isLoadingCategories: true,\r\n  isLoading: true,\r\n};","import {\r\n  MutateIsLoading,\r\n  SET_IS_LOADING,\r\n} from './actions/setIsLoading';\r\nimport initialState from './defaultState';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {\r\n  MutateCategories,\r\n  SET_CATEGORIES,\r\n} from './actions/setCategories';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    case SET_CATEGORIES:\r\n      return MutateCategories(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateIsLoading, SET_IS_LOADING} from './actions/setIsLoading';\r\nimport {MutateCategories, SET_CATEGORIES} from './actions/setCategories';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_CATEGORIES:\r\n      return MutateCategories(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","export default ({\r\n  entity: {\r\n    totalSum: 0,\r\n    loss: 0,\r\n    income: 0,\r\n  },\r\n  isLoading: false,\r\n})\r\n;","import initialState from './defaultState';\r\nimport {MutateIsLoading, SET_IS_LOADING} from './actions/setIsLoading';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {\r\n  MutateLossesPerMonth,\r\n  SET_LOSSES_PER_MONTH,\r\n} from './actions/setLossesPerMonth';\r\nimport {MutateTotalSum, SET_TOTAL_SUM} from './actions/setTotalSum';\r\nimport {\r\n  MutateIncomesPerMonth,\r\n  SET_INCOMES_PER_MONTH,\r\n} from './actions/setIncomesPerMonth';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_LOSSES_PER_MONTH:\r\n      return MutateLossesPerMonth(state, payload);\r\n    case SET_TOTAL_SUM:\r\n      return MutateTotalSum(state, payload);\r\n    case SET_INCOMES_PER_MONTH:\r\n      return MutateIncomesPerMonth(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateIsLoading, SET_IS_LOADING} from './actions/setIsLoading';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateEntity, SET_ENTITY} from './actions/setEntity';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {MutateCosts, SET_COSTS} from './actions/setCosts';\r\nimport {\r\n  MutateIsLoadingEntity,\r\n  SET_IS_LOADING_ENTITY,\r\n} from './actions/setIsLoadingEntity';\r\nimport {\r\n  MutateIsLoadingCosts,\r\n  SET_IS_LOADING_COSTS,\r\n} from './actions/setIsLoadingCosts';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_IS_LOADING_ENTITY:\r\n      return MutateIsLoadingEntity(state, payload);\r\n    case SET_IS_LOADING_COSTS:\r\n      return MutateIsLoadingCosts(state, payload);\r\n    case SET_ENTITY:\r\n      return MutateEntity(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    case SET_COSTS:\r\n      return MutateCosts(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","export default ({\r\n  isShowing: false,\r\n  isLoadingIncomes: false,\r\n  error: null,\r\n  incomes: [],\r\n});","import initialState from './defaultState';\r\nimport {MutateIsShowing, SET_IS_SHOWING} from './actions/setIsShowing';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {MutateIncomes, SET_INCOMES} from './actions/setIncomes';\r\nimport {\r\n  MutateIsLoadingIncomes,\r\n  SET_IS_LOADING_INCOMES,\r\n} from './actions/setIsLoadingIncomes';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_SHOWING:\r\n      return MutateIsShowing(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    case SET_INCOMES:\r\n      return MutateIncomes(state, payload);\r\n    case SET_IS_LOADING_INCOMES:\r\n      return MutateIsLoadingIncomes(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport categoriesReducer from './components/categories/reducer';\r\nimport addCostsModalReducer from './components/addCostsModal/reducer';\r\nimport addCategoryModalReducer from './components/addCategoryModal/reducer';\r\nimport walletReducer from './components/wallet/reducer';\r\nimport addIncomesModalReducer from './components/addIncomesModal/reducer';\r\nimport editCategoryModalReducer from './components/editCategoryModal/reducer';\r\nimport editWalletModalReducer from './components/editWalletModal/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  categories: categoriesReducer,\r\n  addCostsModal: addCostsModalReducer,\r\n  addCategoryModal: addCategoryModalReducer,\r\n  addIncomesModal: addIncomesModalReducer,\r\n  wallet: walletReducer,\r\n  editCategoryModal: editCategoryModalReducer,\r\n  editWalletModal: editWalletModalReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk),\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Layout from './components/layout';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store';\r\n\r\nString.prototype.capitalize = function() {\r\n  return this.charAt(0).toUpperCase() + this.slice(1);\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <Layout/>\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}