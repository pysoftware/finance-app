{"version":3,"sources":["components/categories/components/categoryCard/CategoryCard.js","components/categories/components/categoryCard/index.js","components/loader/Loader.js","components/spinner/index.js","components/spinner/Spinner.js","components/loader/index.js","components/loader/styles.js","components/categories/Categories.js","api/index.js","components/categories/actions/setIsLoading.js","components/categories/actions/setCategories.js","components/categories/actions/setError.js","components/categories/actions/fetchCategories.js","components/categories/dispatcher.js","components/categories/index.js","components/categories/connector.js","components/layout/index.js","components/layout/Layout.js","serviceWorker.js","components/categories/defaultState.js","components/categories/reducer.js","store.js","index.js"],"names":["CategoryCard","title","sumLimit","Body","Title","className","EditOutlined","style","display","alignItems","justifyContent","height","width","cursor","padding","backgroundColor","borderRadius","Text","text","compose","Loader","Spinner","classes","children","isLoading","loader","withStyles","Categories","categories","fetchCategories","useEffect","items","map","item","index","itemData","data","push","key","id","sum_limit","length","Deck","mb","mt","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","SET_IS_LOADING","Symbol","MutateIsLoading","state","loadingStatus","update","$set","SetIsLoading","type","payload","SET_CATEGORIES","MutateCategories","SetCategories","SET_ERROR","MutateError","message","error","SetError","FetchCategories","LoadCategories","dispatch","getState","a","docs","console","collection","get","Dispatcher","connect","dispatcher","Layout","fade","Dialog","centered","Content","Header","Close","aria-hidden","Group","Input","placeholder","onChange","event","log","target","value","htmlFor","Select","Footer","secondary","data-dismiss","primary","expand","dark","bg","sticky","Brand","href","Toggler","navbar","my","success","mr","info","data-toggle","data-target","Boolean","window","location","hostname","match","isLoadingCategories","reducer","initialState","rootReducer","combineReducers","categoriesReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ecf52ca5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card} from 'bootstrap-4-react';\r\nimport {EditOutlined} from '@ant-design/icons';\r\n\r\nconst CategoryCard = (\r\n    {\r\n      title,\r\n      sumLimit,\r\n    },\r\n) => {\r\n\r\n  return (\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title className={'d-flex justify-content-between'}>\r\n            {title}\r\n            <EditOutlined\r\n                style={{\r\n                  display: 'inline-flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  height: 40,\r\n                  width: 40,\r\n                  cursor: 'pointer',\r\n                  padding: 5,\r\n                  backgroundColor: '#eee',\r\n                  borderRadius: 5,\r\n                }}\r\n            />\r\n          </Card.Title>\r\n          <Card.Text text={'muted'}>\r\n            Траты за месяц: 333 ₽\r\n          </Card.Text>\r\n          \r\n          {\r\n            sumLimit > 0 && (\r\n                <Card.Text text={'muted'}>\r\n                  Лимит на месяц: {sumLimit} ₽\r\n                </Card.Text>\r\n            )\r\n          }\r\n\r\n        </Card.Body>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;","import {compose} from 'redux';\r\nimport CategoryCard from './CategoryCard';\r\n\r\nexport default compose()(\r\n    CategoryCard,\r\n);","import React, {Fragment} from 'react';\r\n\r\nconst Loader = ({\r\n  Spinner,\r\n}) => ({\r\n  classes,\r\n\r\n  children,\r\n\r\n  isLoading,\r\n}) => {\r\n\r\n  if (isLoading) {\r\n    return (\r\n        <div className={classes.loader}>\r\n          <Spinner/>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <Fragment>\r\n        {children}\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Loader;","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={'loader'}>\r\n      <div className={'lds-dual-ring'}/>\r\n    </div>\r\n);\r\n\r\nexport default Spinner;","import withStyles from 'react-jss';\r\nimport {compose} from 'redux';\r\nimport styles from './styles';\r\n\r\nimport Loader from './Loader';\r\nimport Spinner from '../spinner';\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n)(\r\n    Loader({\r\n      Spinner,\r\n    }),\r\n);\r\n\r\n","export default ({\r\n  loader: `\r\n    min-height: 200px;\r\n    position: relative;\r\n  `,\r\n});","import React, {useEffect} from 'react';\r\nimport Loader from '../loader';\r\nimport CategoryCard from './components/categoryCard';\r\nimport {Card} from 'bootstrap-4-react';\r\n\r\nconst Categories = (\r\n    {\r\n      categories,\r\n      isLoading,\r\n\r\n      fetchCategories,\r\n    },\r\n) => {\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  return (\r\n      <Loader isLoading={isLoading}>\r\n        {\r\n          (() => {\r\n            let items = [];\r\n            return categories.map((item, index) => {\r\n              if (index % 2 === 0) {\r\n                items = [];\r\n              }\r\n              const itemData = item.data();\r\n              items.push((\r\n                  <CategoryCard\r\n                      key={item.id}\r\n                      title={itemData.title}\r\n                      sumLimit={itemData.sum_limit}\r\n                  />\r\n              ));\r\n\r\n              if (index > 0 && index % 2 !== 0 || categories.length ===\r\n                  index + 1) {\r\n                return (\r\n                    <Card.Deck\r\n                        mb={'3'}\r\n                        mt={'3'}\r\n                        key={index}\r\n                    >\r\n                      {[...items]}\r\n                    </Card.Deck>\r\n                );\r\n              }\r\n            });\r\n          })()\r\n        }\r\n      </Loader>\r\n  );\r\n};\r\n\r\nexport default Categories;","import * as firebase from 'firebase/app';\r\nimport 'firebase/analytics';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyD6NVbBtWaZm5P3j4ZHh1Bqs4TatJlYmS4',\r\n  authDomain: 'finance-app-6cdfc.firebaseapp.com',\r\n  databaseURL: 'https://finance-app-6cdfc.firebaseio.com',\r\n  projectId: 'finance-app-6cdfc',\r\n  storageBucket: 'finance-app-6cdfc.appspot.com',\r\n  messagingSenderId: '618921567953',\r\n  appId: '1:618921567953:web:5e0513acafd208704647f0',\r\n  measurementId: 'G-H2X987S04D',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\n","import update from 'immutability-helper';\r\n\r\nexport const SET_IS_LOADING = Symbol('SET_IS_LOADING');\r\n\r\nexport const SetIsLoading = (loadingStatus) => ({\r\n  type: SET_IS_LOADING,\r\n  payload: {\r\n    loadingStatus,\r\n  },\r\n});\r\n\r\nexport const MutateIsLoading = (state, {loadingStatus}) => update(state, {\r\n  isLoading: {$set: loadingStatus},\r\n});\r\n\r\nexport default SetIsLoading; ","import update from 'immutability-helper';\r\n\r\nexport const SET_CATEGORIES = Symbol('SET_CATEGORIES');\r\n\r\nexport const SetCategories = (categories) => ({\r\n  type: SET_CATEGORIES,\r\n  payload: categories,\r\n});\r\n\r\nexport const MutateCategories = (state, categories) => update(state, {\r\n  categories: {$set: categories},\r\n});\r\n\r\nexport default SetCategories;","import update from 'immutability-helper';\r\n\r\nexport const SET_ERROR = Symbol('SET_ERROR');\r\n\r\nexport const SetError = (message) => ({\r\n  type: SET_ERROR,\r\n  payload: message,\r\n});\r\n\r\nexport const MutateError = (state, message) => update(state, {\r\n  error: {$set: message},\r\n});\r\n\r\nexport default SetError;","import {firestore} from 'Api';\r\nimport SetIsLoading from './setIsLoading';\r\nimport SetCategories from './setCategories';\r\nimport SetError from './setError';\r\n\r\nconst FetchCategories = (\r\n    {\r\n      LoadCategories,\r\n    },\r\n) => () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(SetIsLoading(true));\r\n\r\n    const {\r\n      docs: categories,\r\n    } = await LoadCategories;\r\n\r\n    dispatch(SetCategories(categories));\r\n    dispatch(SetError(null));\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(SetError('Ошибка сервера. Страница сейчас перезагрузится.'));\r\n  } finally {\r\n    dispatch(SetIsLoading(false));\r\n  }\r\n};\r\n\r\nexport default FetchCategories({\r\n  LoadCategories: firestore.collection('categories').get(),\r\n});\r\n","import FetchCategories from './actions/fetchCategories';\r\n\r\nexport const Dispatcher = dispatch => ({\r\n  fetchCategories: () => dispatch(FetchCategories()),\r\n});\r\n\r\nexport default Dispatcher;","import Categories from './Categories';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport connector from './connector';\r\nimport dispatcher from './dispatcher';\r\n\r\nexport default compose(\r\n    connect(connector, dispatcher),\r\n)(Categories);","export default (\r\n    {\r\n      categories: {\r\n        isLoading,\r\n        categories,\r\n        error,\r\n      },\r\n    },\r\n) => ({\r\n  isLoading,\r\n  categories,\r\n  error,\r\n});","import Layout from './Layout';\r\n\r\nexport default Layout;","import React, {Fragment, useEffect, useState} from 'react';\r\nimport CategoryCard from '../categories/components/categoryCard';\r\nimport Categories from '../categories';\r\nimport {\r\n  Container,\r\n  Card,\r\n  Collapse,\r\n  Navbar,\r\n  Button,\r\n  Form,\r\n  BDiv,\r\n  Modal,\r\n} from 'bootstrap-4-react';\r\nimport {firestore} from 'Api';\r\n\r\nconst Layout = () => {\r\n  //\r\n  // const [categories, setCategories] = useState([]);\r\n  //\r\n  // useEffect(() => {\r\n  //   firestore.collection('categories').get().then(value => {\r\n  //     setCategories(value.docs);\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n      <Fragment>\r\n\r\n        <Modal id=\"exampleModal\" fade>\r\n          <Modal.Dialog centered>\r\n            <Modal.Content>\r\n              <Modal.Header>\r\n                <Modal.Title>Добавление траты</Modal.Title>\r\n                <Modal.Close>\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </Modal.Close>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <label>Сумма</label>\r\n                    <Form.Input\r\n                        type=\"number\"\r\n                        placeholder=\"Введите сумму\"\r\n                        onChange={(event) => console.log(event.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label htmlFor=\"exampleControlsInput1\">\r\n                      Категория\r\n                    </label>\r\n                    <Form.Select>\r\n                      <option>Large select</option>\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button secondary data-dismiss=\"modal\">Закрыть</Button>\r\n                <Button primary>Добавить трату</Button>\r\n              </Modal.Footer>\r\n            </Modal.Content>\r\n          </Modal.Dialog>\r\n        </Modal>\r\n\r\n        <Navbar expand=\"lg\" dark bg=\"dark\" mb=\"3\" sticky=\"top\">\r\n          <Navbar.Brand href=\"#\">Финансы</Navbar.Brand>\r\n          <Navbar.Toggler target={'#navbar'}/>\r\n          <Collapse navbar id={'navbar'} justifyContent=\"end\">\r\n            <BDiv my=\"2 lg-0\">\r\n              <Button success mr={2} mt={2}>\r\n                Добавить категорию\r\n              </Button>\r\n              <Button\r\n                  info\r\n                  mr={2}\r\n                  mt={2}\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#exampleModal\"\r\n              >\r\n                Добавить трату\r\n              </Button>\r\n            </BDiv>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        <Container>\r\n\r\n          <h5>Общая сумма:&nbsp;3434&nbsp;₽</h5>\r\n          <h5>Траты за месяц:&nbsp;535&nbsp;₽</h5>\r\n          <h5>Доходы за месяц:&nbsp;534&nbsp;₽</h5>\r\n\r\n          <Categories/>\r\n\r\n\r\n\r\n\r\n        </Container>\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default {\r\n  categories: [],\r\n  isLoadingCategories: true,\r\n  isLoading: true,\r\n};","import {\r\n  MutateIsLoading,\r\n  SET_IS_LOADING,\r\n} from './actions/setIsLoading';\r\nimport initialState from './defaultState';\r\nimport {MutateError, SET_ERROR} from './actions/setError';\r\nimport {\r\n  MutateCategories,\r\n  SET_CATEGORIES,\r\n} from './actions/setCategories';\r\n\r\nconst reducer = (\r\n    state = initialState,\r\n    {type, payload},\r\n) => {\r\n  switch (type) {\r\n    case SET_IS_LOADING:\r\n      return MutateIsLoading(state, payload);\r\n    case SET_ERROR:\r\n      return MutateError(state, payload);\r\n    case SET_CATEGORIES:\r\n      return MutateCategories(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport categoriesReducer from './components/categories/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  categories: categoriesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk),\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Layout from './components/layout';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <Layout/>\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}