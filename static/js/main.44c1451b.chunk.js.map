{"version":3,"sources":["api/index.js","components/layout/index.js","components/layout/Layout.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Layout","Typography","Text","Title","useEffect","collection","get","then","value","forEach","item","console","log","data","id","fade","Dialog","centered","Content","Header","Close","aria-hidden","Body","Group","Input","type","placeholder","onChange","event","target","htmlFor","Select","Footer","secondary","data-dismiss","primary","expand","dark","bg","mb","sticky","Brand","href","Toggler","navbar","justifyContent","my","success","mr","mt","info","data-toggle","data-target","Deck","className","EditOutlined","style","cursor","padding","backgroundColor","borderRadius","text","Subtitle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44c1451b.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/analytics';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyD6NVbBtWaZm5P3j4ZHh1Bqs4TatJlYmS4',\r\n  authDomain: 'finance-app-6cdfc.firebaseapp.com',\r\n  databaseURL: 'https://finance-app-6cdfc.firebaseio.com',\r\n  projectId: 'finance-app-6cdfc',\r\n  storageBucket: 'finance-app-6cdfc.appspot.com',\r\n  messagingSenderId: '618921567953',\r\n  appId: '1:618921567953:web:5e0513acafd208704647f0',\r\n  measurementId: 'G-H2X987S04D',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\n","import Layout from './Layout';\r\n\r\nexport default Layout;","import React, {Fragment, useEffect} from 'react';\r\nimport {Input} from 'antd';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  BSmall,\r\n  Card,\r\n  Collapse,\r\n  Navbar,\r\n  Nav,\r\n  Button,\r\n  Form,\r\n  ListGroup,\r\n  BDiv,\r\n  Modal,\r\n} from 'bootstrap-4-react';\r\nimport {EditOutlined} from '@ant-design/icons';\r\nimport {firestore} from 'Api';\r\nimport {Typography} from 'antd';\r\n\r\nconst {Text, Title} = Typography;\r\n\r\nconst Layout = () => {\r\n\r\n  useEffect(() => {\r\n    firestore.collection('categories').get().then(value => {\r\n      value.forEach(item => console.log(item.data()));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n      <Fragment>\r\n\r\n        <Modal id=\"exampleModal\" fade>\r\n          <Modal.Dialog centered>\r\n            <Modal.Content>\r\n              <Modal.Header>\r\n                <Modal.Title>Добавление траты</Modal.Title>\r\n                <Modal.Close>\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </Modal.Close>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <label>Сумма</label>\r\n                    <Form.Input\r\n                        type=\"number\"\r\n                        placeholder=\"Введите сумму\"\r\n                        onChange={(event) => console.log(event.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <label htmlFor=\"exampleControlsInput1\">\r\n                      Категория\r\n                    </label>\r\n                    <Form.Select>\r\n                      <option>Large select</option>\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button secondary data-dismiss=\"modal\">Закрыть</Button>\r\n                <Button primary>Добавить трату</Button>\r\n              </Modal.Footer>\r\n            </Modal.Content>\r\n          </Modal.Dialog>\r\n        </Modal>\r\n\r\n        <Navbar expand=\"lg\" dark bg=\"dark\" mb=\"3\" sticky=\"top\">\r\n          <Navbar.Brand href=\"#\">Финансы</Navbar.Brand>\r\n          <Navbar.Toggler target={'#navbar'}/>\r\n          <Collapse navbar id={'navbar'} justifyContent=\"end\">\r\n            <BDiv my=\"2 lg-0\">\r\n              <Button success mr={2} mt={2}>\r\n                Добавить категорию\r\n              </Button>\r\n              <Button\r\n                  info\r\n                  mr={2}\r\n                  mt={2}\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#exampleModal\"\r\n              >\r\n                Добавить трату\r\n              </Button>\r\n            </BDiv>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        <Container>\r\n\r\n          <h5>Общая сумма:&nbsp;3434&nbsp;₽</h5>\r\n          <h5>Траты за месяц:&nbsp;535&nbsp;₽</h5>\r\n          <h5>Доходы за месяц:&nbsp;534&nbsp;₽</h5>\r\n          <Card.Deck mb=\"3\" mt={'3'}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title className={'d-flex justify-content-between'}>\r\n                  Развлечения <EditOutlined\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: 5,\r\n                      backgroundColor: '#eee',\r\n                      borderRadius: 5,\r\n                    }}\r\n                />\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <h5>\r\n                    Траты за месяц: 333 ₽\r\n                  </h5>\r\n                </Card.Text> <Card.Text>\r\n                <h5>\r\n                  Лимит на месяц: 333 ₽\r\n                </h5>\r\n              </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Card.Text>\r\n                  <BSmall text=\"muted\">\r\n                    Last updated 3 mins ago\r\n                  </BSmall>\r\n                </Card.Text>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  This is a wider card with supporting text below as a natural\r\n                  lead-in to additional content. This card has even longer\r\n                  content\r\n                  than the first to show that equal height action.\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Card.Text>\r\n                  <BSmall text=\"muted\">\r\n                    Last updated 3 mins ago\r\n                  </BSmall>\r\n                </Card.Text>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Card.Deck>\r\n          <Card.Deck mb=\"3\" mt={'3'}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Развлечения</Card.Title>\r\n                <Card.Subtitle>1</Card.Subtitle>\r\n                <Card.Text>\r\n                  This is a wider card with supporting text below as a natural\r\n                  lead-in to additional content. This content is a little bit\r\n                  longer.\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Card.Text>\r\n                  <BSmall text=\"muted\">\r\n                    Last updated 3 mins ago\r\n                  </BSmall>\r\n                </Card.Text>\r\n              </Card.Footer>\r\n            </Card>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  This is a wider card with supporting text below as a natural\r\n                  lead-in to additional content. This card has even longer\r\n                  content\r\n                  than the first to show that equal height action.\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <Card.Text>\r\n                  <BSmall text=\"muted\">\r\n                    Last updated 3 mins ago\r\n                  </BSmall>\r\n                </Card.Text>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Card.Deck>\r\n        </Container>\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Layout from './components/layout';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Layout/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}